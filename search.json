[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "JupyerHub Guide",
    "section": "",
    "text": "JupyterHub Guide\nThis is a short guide to create and run the notbooks and environments in the JupiterHub for the Master course Microwave Remote Sensing (120.030) at the TU Wien.",
    "crumbs": [
      "JupyterHub Guide"
    ]
  },
  {
    "objectID": "index.html#starting-jupyterhub",
    "href": "index.html#starting-jupyterhub",
    "title": "JupyerHub Guide",
    "section": "Starting JupyterHub",
    "text": "Starting JupyterHub\nIn TUWEL, click on the JupyterHub icon , which redirects you to your own JupyterLab user environment. You should then select the Server for the Desktop Notebook from the Microwave Remote Sensing course. Be patient - this can take a couple of minutes.\n\n\n\nPlease note that all screenshots in this guide refer to the lecture 120.030 Microwave Remote Sensing (2024W), even if a few things are different for you, the overall functionality and interface remain the same.",
    "crumbs": [
      "JupyterHub Guide"
    ]
  },
  {
    "objectID": "index.html#exploring-jupyterlab",
    "href": "index.html#exploring-jupyterlab",
    "title": "JupyerHub Guide",
    "section": "Exploring JupyterLab",
    "text": "Exploring JupyterLab\nWhen you start your server for the first time, your point of entry will be this starting page:\n\n\n\nIn the center, you have the Launcher where you can create Python or other files, play around with Jupyter Notebooks, store intermediate data. You can also open a Python console, a terminal, a text file, and many more. On the left, you can see your home directory where you have the folders lectures and shared. There might be other folders as well, but don’t be concerned about them.\n\n\nAfter some intense coding and analysis, it can happen that you have many terminal and notebook tabs open. However, simply closing them does not quit the processes and running kernels in the background. Therefore, we recommend that you tidy up your running processes after some time, which can be done as marked by the top-left circle. As an overview, the number of running kernels and terminals are always shown at the bottom-left corner.",
    "crumbs": [
      "JupyterHub Guide"
    ]
  },
  {
    "objectID": "index.html#setup-of-exercise-environment",
    "href": "index.html#setup-of-exercise-environment",
    "title": "JupyerHub Guide",
    "section": "Setup of Exercise Environment",
    "text": "Setup of Exercise Environment\nTo use the Notebooks from the course, the following steps need to be taken:\n\nNavigate to the folder ~/shared/120.030-2024W/ where you should find a Makefile and a README.md.\n\n\n\n\n\nAt this level, you should open a Terminal using the Launcher and run the command\nmake notebooks\nWait until the installation is finished - this can take a couple of minutes.\nThe notebooks and an environment, where the important packages and all their dependencies are included, have been installed for you.\nIt might be necessary to re-login to the JupyterHub to see it coming into effect.\nNow you should see a folder named microwave-remote-sensing containing the notebooks and additional kernels in the Launcher of JupyterLab.\n\n\n\n\n\nSelect the kernel mrs-env kernel for execution of the code blocks in the notebook.\n\n\n\n\n \n\n\n\n\n\n\nIn case you could not select the correct server and could not find the folder from step one, you might be in the wrong server. You can change your server by selecting\nFile -&gt; Hub Control Panel\nand clicking on Stop My Server.\n\n\n\nThen press Start My Server and you should be able to select the “Desktop Notebook” for the “120.030-2024W: 120.030 Microwave Remote Sensing” course.",
    "crumbs": [
      "JupyterHub Guide"
    ]
  },
  {
    "objectID": "index.html#removing-exercise-environment",
    "href": "index.html#removing-exercise-environment",
    "title": "JupyerHub Guide",
    "section": "Removing Exercise Environment",
    "text": "Removing Exercise Environment\nTo remove the exercise notebooks as well as the Jupyter kernel Launch a terminal from ~/shared/120.030-2024W/ and type:\nmake delete",
    "crumbs": [
      "JupyterHub Guide"
    ]
  },
  {
    "objectID": "index.html#editing-jupyter-notebooks",
    "href": "index.html#editing-jupyter-notebooks",
    "title": "JupyerHub Guide",
    "section": "Editing Jupyter Notebooks",
    "text": "Editing Jupyter Notebooks\nThe homework exercises of the course are labeled as homework_exercise.ipynb. You are supposed to use these notebooks for the homework assignments and the completed notebooks should be submitted through TUWEL. The notebooks consist of two types of cells: Python and Markdown cells. Python cells contain executable Python code, whereas Markdown cells are used for open text and multiple choice questions. Double click on an existing cell to alter its content. To add new cells click select the cell type from the drop-down menu and click on the plus sign, as follows for Python cells:\n\nAnd for Markdown cells:\n\nFor the multiple choice questions double click on the Markdown cell and replace the correct answers, as follows:\n- [ ] Original\n- [x] Selected answer\n\nOriginal\nSelected answer\n\nTo save your work use the drop-down menu under File and select Save Notebook or use the shortcut CTRL + S.",
    "crumbs": [
      "JupyterHub Guide"
    ]
  },
  {
    "objectID": "unit_01/01_in_class_exercise.html",
    "href": "unit_01/01_in_class_exercise.html",
    "title": "1  In-class Exercise 1: Discover Sentinel 1 data using the EODC STAC catalog",
    "section": "",
    "text": "1.1 Data Discovery\neodc_catalog = pystac_client.Client.open(\"https://stac.eodc.eu/api/v1\")\n\neodc_catalog\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Catalog\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"stac-fastapi\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"A STAC-compliant API to query for metadata within the EODC Data Catalogue.\"\n        \n    \n                \n            \n                \n                    \n        links[] 57 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"data\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"conformance\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/conformance\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"STAC/WFS3 conformance classes implemented by this server\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"search\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/search\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"STAC search\"\n        \n    \n            \n        \n            \n                \n        \n            method\n            \"GET\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \n        \n            \n                \n        \n            rel\n            \"search\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/search\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"STAC search\"\n        \n    \n            \n        \n            \n                \n        \n            method\n            \"POST\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL2_L2A\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-2 MSI Products: Level-2A data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL2_GRI_L1C\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Multi-Layer Copernicus Sentinel-2 GRI in L1C\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_OSTTIROL\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Osttirol\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_HPAR\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SENTINEL1 Harmonic Parameters\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            10\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/AUT_DEM\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Austrian High Resolution DEM\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            11\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/COP_DEM\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Copernicus Digital Elevation Model (DEM)\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            12\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_KLAGENFURT\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Klagenfurt\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            13\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_WOLFSBERG\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Wolfsberg\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            14\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_MPLIA\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SENTINEL1 Mean PLIA\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            15\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_SLC\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-1 SLC\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            16\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_GRD\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-1 SAR L1 GRD\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            17\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/AI4SAR_SIG0\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"AI4SAR Despeckled Sentinel-1 Sigma0 (20m)\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            18\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL3_SRAL_L2\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-3 Products: SRAL Level-2 data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            19\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL2_L1C\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-2 MSI Products: Level-1C data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            20\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_SIG0_20M\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SENTINEL1 Sigma Nought (SIG0) Backscatter in 20 meter resolution\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            21\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_BISCHOFSHOFEN\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Bischofshofen\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            22\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_MURTAL\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Murtal\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            23\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_MARIAZELL\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Mariazell\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            24\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_GRAZ\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Graz\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            25\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_WINDISCHGARSTEN\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Windischgarsten\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            26\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_KLAGENFURT\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Klagenfurt\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            27\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_SUEDBURGENLAND\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Suedburgenland\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            28\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_ST_VILLACH\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Villach\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            29\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/INTRA_FIELD_CROP_GROWTH_POTENTIAL\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Intra-field Crop Growth Potential\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            30\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/Sentinel-1_Reed_Extent\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SENTINEL-1 Reed Extent\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            31\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/AUSTRIA_GROUND_MOTION\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Austria Ground Motion\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            32\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/Sentinel-1_Lacken_Extent\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SENTINEL-1 Lacken Extent\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            33\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DROUGHT_VULNERABILITY\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Drought Vulnerability\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            34\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL2_MFCOVER\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Monthly Composite of Fraction of Vegetation Cover\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            35\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL2_L1C_COVERAGE\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-2 L1C Coverage Maps\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            36\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SAR_IMP_1P\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"ERS-1/2 SAR Image Mode Precision Level-1\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            37\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SAR_IMS_1P\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"ERS-1/2 SAR Image Mode Single Look Complex Level-1\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            38\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/ASA_IMS_1P\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Envisat ASAR Image Mode Single Look Complex Level-1\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            39\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/ERS_ENVISAT_NRB\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"ERS-1/2 SAR and ENVISAT ASAR ARD Normalized Radar Backscatter (NRB)\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            40\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_ALPS_WETSNOW\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-1 Alps WetSnow\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            41\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/ASA_IMP_1P\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Envisat ASAR Image Mode Precision Level-1\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            42\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/Sentinel-2-Greenness-Austria\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-2 Greenness Austria\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            43\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_GRD_COVERAGE\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sentinel-1 Coverage Maps\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            44\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/VEGETATION_CHANGE_AUSTRIA\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Vegetation-Change-Austria\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            45\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/sentinel2-landsat8-l2f\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Harmonized Landsat and Sentinel 2 L2F\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            46\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/GFM\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Global Flood Monitoring\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            47\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/CORINE_LAND_COVER\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Corine Land Cover\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            48\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_TAMSWEG\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Tamsweg\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            49\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_VILLACH\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Villach\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            50\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/BOA_LANDSAT_8\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Bottom of Atmosphere Landsat-8 at 30m resolution.\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            51\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_ZELTWEG\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Zeltweg\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            52\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/DOP_AUT_K_ZELL_AM_SEE\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Zell am See\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            53\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/BOA_SENTINEL_2\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Bottom of Atmosphere Sentinel-2 at 10m resolution.\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            54\n            \n        \n            \n                \n        \n            rel\n            \"child\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/CGLS_SSM_1KM\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Copernicus Global Land Surface Soil Moisture\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            55\n            \n        \n            \n                \n        \n            rel\n            \"service-desc\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/openapi.json\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/vnd.oai.openapi+json;version=3.0\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"OpenAPI service description\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            56\n            \n        \n            \n                \n        \n            rel\n            \"service-doc\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/docs\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"OpenAPI service documentation\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        conformsTo[] 16 items\n        \n            \n        \n            \n                \n        \n            0\n            \"http://www.opengis.net/spec/ogcapi-features-3/1.0/conf/filter\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"http://www.opengis.net/spec/cql2/1.0/conf/basic-cql2\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://api.stacspec.org/v1.0.0/item-search\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \"https://api.stacspec.org/v1.0.0/ogcapi-features\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \"http://www.opengis.net/spec/cql2/1.0/conf/cql2-text\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#filter\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#query\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#context\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            \"https://api.stacspec.org/v1.0.0/core\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            9\n            \"https://api.stacspec.org/v1.0.0/collections\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            10\n            \"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            11\n            \"https://api.stacspec.org/v1.0.0-rc.3/item-search#fields\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            12\n            \"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            13\n            \"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            14\n            \"https://api.stacspec.org/v1.0.0-rc.2/item-search#sort\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            15\n            \"http://www.opengis.net/spec/ogcapi-features-3/1.0/conf/features-filter\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"EODC Data Catalogue\"\nThe URL https://stac.eodc.eu/api/v1, served over Hypertext Transfer Protocol (HTTP), is a STAC-compliant API endpoint (specific URL address where an API service is available) that leads to the EODC Catalogue. Besides EODC’s, other catalogues can be found on STAC Index, such as United States Geological Survey (USGS) Landsat imagery, Sentinel Hub, Copernicus Data Space Ecosystem, and so on. Briefly spoken, STAC can be used to search, discover, and access metadata of these datasets with the same code. The EODC Catalogue can be accessed on the web via this link as well.\nEach STAC catalog, composed by different providers, has many collections. To get all collections of a catalog, we can print all of them and their ids, which are used to fetch them from the catalog.\ncollections = eodc_catalog.get_collections()\n\n# length of string of collection.id, for pretty print\nmax_length = max(len(collection.id) for collection in collections)\n\nfor collection in eodc_catalog.get_collections():\n    print(f\"{collection.id.ljust(max_length)}: {collection.title}\")\n\nSENTINEL2_L2A                    : Sentinel-2 MSI Products: Level-2A data\nSENTINEL2_GRI_L1C                : Multi-Layer Copernicus Sentinel-2 GRI in L1C\nDOP_AUT_K_OSTTIROL               : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Osttirol\nSENTINEL1_HPAR                   : SENTINEL1 Harmonic Parameters\nAUT_DEM                          : Austrian High Resolution DEM\nCOP_DEM                          : Copernicus Digital Elevation Model (DEM)\nDOP_AUT_K_KLAGENFURT             : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Klagenfurt\nDOP_AUT_K_WOLFSBERG              : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Wolfsberg\nSENTINEL1_MPLIA                  : SENTINEL1 Mean PLIA\nSENTINEL1_SLC                    : Sentinel-1 SLC\nSENTINEL1_GRD                    : Sentinel-1 SAR L1 GRD\nAI4SAR_SIG0                      : AI4SAR Despeckled Sentinel-1 Sigma0 (20m)\nSENTINEL3_SRAL_L2                : Sentinel-3 Products: SRAL Level-2 data\nSENTINEL2_L1C                    : Sentinel-2 MSI Products: Level-1C data\nSENTINEL1_SIG0_20M               : SENTINEL1 Sigma Nought (SIG0) Backscatter in 20 meter resolution\nDOP_AUT_ST_BISCHOFSHOFEN         : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Bischofshofen\nDOP_AUT_ST_MURTAL                : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Murtal\nDOP_AUT_ST_MARIAZELL             : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Mariazell\nDOP_AUT_ST_GRAZ                  : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Graz\nDOP_AUT_ST_WINDISCHGARSTEN       : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Windischgarsten\nDOP_AUT_ST_KLAGENFURT            : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Klagenfurt\nDOP_AUT_ST_SUEDBURGENLAND        : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Suedburgenland\nDOP_AUT_ST_VILLACH               : Digital Orthophotos (DOP) Austria - Land Steiermark: Orthophotos Flugblock Villach\nINTRA_FIELD_CROP_GROWTH_POTENTIAL: Intra-field Crop Growth Potential\nSentinel-1_Reed_Extent           : SENTINEL-1 Reed Extent\nAUSTRIA_GROUND_MOTION            : Austria Ground Motion\nSentinel-1_Lacken_Extent         : SENTINEL-1 Lacken Extent\nDROUGHT_VULNERABILITY            : Drought Vulnerability\nSENTINEL2_MFCOVER                : Monthly Composite of Fraction of Vegetation Cover\nSENTINEL2_L1C_COVERAGE           : Sentinel-2 L1C Coverage Maps\nSAR_IMP_1P                       : ERS-1/2 SAR Image Mode Precision Level-1\nSAR_IMS_1P                       : ERS-1/2 SAR Image Mode Single Look Complex Level-1\nASA_IMS_1P                       : Envisat ASAR Image Mode Single Look Complex Level-1\nERS_ENVISAT_NRB                  : ERS-1/2 SAR and ENVISAT ASAR ARD Normalized Radar Backscatter (NRB)\nSENTINEL1_ALPS_WETSNOW           : Sentinel-1 Alps WetSnow\nASA_IMP_1P                       : Envisat ASAR Image Mode Precision Level-1\nSentinel-2-Greenness-Austria     : Sentinel-2 Greenness Austria\nSENTINEL1_GRD_COVERAGE           : Sentinel-1 Coverage Maps\nVEGETATION_CHANGE_AUSTRIA        : Vegetation-Change-Austria\nsentinel2-landsat8-l2f           : Harmonized Landsat and Sentinel 2 L2F\nGFM                              : Global Flood Monitoring\nCORINE_LAND_COVER                : Corine Land Cover\nDOP_AUT_K_TAMSWEG                : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Tamsweg\nDOP_AUT_K_VILLACH                : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Villach\nBOA_LANDSAT_8                    : Bottom of Atmosphere Landsat-8 at 30m resolution.\nDOP_AUT_K_ZELTWEG                : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Zeltweg\nDOP_AUT_K_ZELL_AM_SEE            : Digital Orthophotos (DOP) Austria - Land Kärnten: Orthofotos Flugblock Zell am See\nBOA_SENTINEL_2                   : Bottom of Atmosphere Sentinel-2 at 10m resolution.\nCGLS_SSM_1KM                     : Copernicus Global Land Surface Soil Moisture\nTo get a specific collection from the catalog, we can use the client.get_collection() method and provide the collection name. We can then display its description, id, temporal and spatial extent, license, etc. In this notebook, we will work with the Sentinel-1 sigma naught 20m collection.\ncolllection_id = \"SENTINEL1_SIG0_20M\"\n\ncollection = eodc_catalog.get_collection(colllection_id)\ncollection\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Collection\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"SENTINEL1_SIG0_20M\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"Sentinel-1 Sigma Nought (SIG0) Products are radiometric calibrated and georeferenced backscatter data generated from Sentinel-1 level-1 Interferometric Wide (IW) Swath Ground Range Detected (GRD) High resolution products using TUWien Sentinel-1 preprocesssing workflow. The preprocessing workflow includes following steps: applying precise orbit file, radiometric calibration, thermal noise removal, and range doppler terrain correction. In the end, Sigma0 backscatter image is reprojected and resampled into Equi7 Grid system at 20m pixels spacing.\"\n        \n    \n                \n            \n                \n                    \n        links[] 5 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"items\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_SIG0_20M/items\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"EODC Data Catalogue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/api/v1/collections/SENTINEL1_SIG0_20M\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"items\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://stac.eodc.eu/ingestion/v1/collections/SENTINEL1_SIG0_20M/items\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        stac_extensions[] 6 items\n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/sat/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/sar/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \"https://stac-extensions.github.io/projection/v1.1.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \"https://stac-extensions.github.io/item-assets/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \"https://stac-extensions.github.io/datacube/v2.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            cube:dimensions\n            \n        \n            \n                \n        \n            x\n            \n        \n            \n                \n        \n            axis\n            \"x\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"spatial\"\n        \n    \n            \n        \n            \n                \n        extent[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -180\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            180\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            y\n            \n        \n            \n                \n        \n            axis\n            \"y\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"spatial\"\n        \n    \n            \n        \n            \n                \n        extent[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            -90\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            90\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            time\n            \n        \n            \n                \n        \n            type\n            \"temporal\"\n        \n    \n            \n        \n            \n                \n        extent[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            \"2014-10-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            None\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"SENTINEL1 Sigma Nought (SIG0) Backscatter in 20 meter resolution\"\n        \n    \n                \n            \n                \n                    \n        \n            extent\n            \n        \n            \n                \n        \n            spatial\n            \n        \n            \n                \n        bbox[] 1 items\n        \n            \n        \n            \n                \n        0[] 4 items\n        \n            \n        \n            \n                \n        \n            0\n            -180\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            -90\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            180\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            90\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            temporal\n            \n        \n            \n                \n        interval[] 1 items\n        \n            \n        \n            \n                \n        0[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            \"2014-10-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            None\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            license\n            \"proprietary\"\n        \n    \n                \n            \n                \n                    \n        providers[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"TU Wien\"\n        \n    \n            \n        \n            \n                \n        roles[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            \"processor\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"licensor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.tuwien.at/mg/geo\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"EODC\"\n        \n    \n            \n        \n            \n                \n        roles[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            \"processor\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"host\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://eodc.eu/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            summaries\n            \n        \n            \n                \n        gsd[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            20\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        eo:bands[] 4 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"VV\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_VV\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in VV polarization\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"VH\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_VH\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in VH polarization\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"HH\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_HH\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in HH polarization\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"HV\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_HV\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in HV polarization\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        platform[] 2 items\n        \n            \n        \n            \n                \n        \n            0\n            \"sentinel-1a\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"sentinel-1b\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            item_assets\n            \n        \n            \n                \n        \n            HH\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sigma Nought (HH)\"\n        \n    \n            \n        \n            \n                \n        eo:bands[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"HH\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_HH\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in HH polarization\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            HV\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sigma Nought (HV)\"\n        \n    \n            \n        \n            \n                \n        eo:bands[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"HV\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_HV\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in HV polarization\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            VH\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sigma Nought (VH)\"\n        \n    \n            \n        \n            \n                \n        eo:bands[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"VH\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_VH\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in VH polarization\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            VV\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Sigma Nought (VV)\"\n        \n    \n            \n        \n            \n                \n        eo:bands[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"VV\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"Sigma0_VV\"\n        \n    \n            \n        \n            \n                \n        \n            center_wavelength\n            55465.76\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Sigma Nought in VV polarization\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        roles[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"A medium sized thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            constellation\n            \"sentinel-1\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://objectstore.eodc.eu:2222/swift/v1/AUTH_68e13833a1624f43ba2cac01376a18af/thumbnails/SENTINEL1_SIG0_20M.png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"SENTINEL1_SIG0_20M collection thumbnail.\"\n        \n    \n            \n        \n            \n                \n        roles[] 1 items\n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\nEach collection has multiple items. An item is one spatio-temporal instance the collection, for instance a satellite image. If items are needed for a specific timeframe or for a specific region of interest, we can define this as a query.\ntime_range = \"2022-10-01/2022-10-07\"  # a closed range\n# time_range = \"2022-01\"  # whole month, same can be done for a year and a day\n# time_range = \"2022-01-01/..\"  # up to the current date, an open range\n# time_range = \"2022-01-01T05:34:46\"  # a specific time instance\nA spatial region of interest can be defined in different ways. One option is to define a simple bounding box:\nlatmin, latmax = 46.3, 49.3  # South to North\nlonmin, lonmax = 13.8, 17.8  # West to East\n\nbounding_box = [lonmin, latmin, lonmax, latmax]\nIf the region of interest is not rectengular, we can also define a polygon:\n# GEOJSON can be created on geojson.io\n\n# This specific area of interest is a rectangle, but since it is\n# a closed polygon it seems like it has five nodes\n\narea_of_interest = {\n    \"coordinates\": [\n        [\n            [17.710928010825853, 49.257630084442496],\n            [13.881798300915221, 49.257630084442496],\n            [13.881798300915221, 46.34747715326259],\n            [17.710928010825853, 46.34747715326259],\n            [17.710928010825853, 49.257630084442496],\n        ]\n    ],\n    \"type\": \"Polygon\",\n}\nUsing our previously loaded STAC catalog, we can now search for items fullfilling our query. In this example we are using the bounding box. If we want to use an area of interest specified in the geojson format - one hast to use the intersects parameter as documented in the comment below.\nsearch = eodc_catalog.search(\n    collections=colllection_id,  # can also be a list of several collections\n    bbox=bounding_box,  # search by bounding box\n    # intersects=area_of_interest,  # GeoJSON search\n    datetime=time_range,\n    # max_items=1  # number of max items to load\n)\n\n# If we comment everything besides colllection_id, we will load whole\n# collection for available region and time_range\n\nitems_eodc = search.item_collection()\nprint(f\"On EODC we found {len(items_eodc)} items for the given search query\")\n\nOn EODC we found 52 items for the given search query\nNow, we can fetch a single item, in this case a Sentinel-1 image, from the query results. A good practice is to always check what metadata the data provider has stored on the item level. This can be done by looking into the item properties.\nitem = items_eodc[0]\nitem.properties\n\n{'gsd': 20,\n 'parent': 'S1A_IW_GRDH_1SDV_20221007T170811_20221007T170836_045339_056BBA_D830.zip',\n 'checksum': '576abe68a715e5ee177d8b640871e873',\n 'datetime': '2022-10-07T17:08:11Z',\n 'blocksize': {'x': 15000, 'y': 5},\n 'proj:bbox': [4800000, 1500000, 5100000, 1800000],\n 'proj:wkt2': 'PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]]]',\n 'proj:shape': [15000, 15000],\n 'Equi7_TileID': 'EU020M_E048N015T3',\n 'constellation': 'sentinel-1',\n 'proj:geometry': {'type': 'Polygon',\n  'coordinates': [[[4800000.0, 1500000.0],\n    [4800000.0, 1800000.0],\n    [5100000.0, 1800000.0],\n    [5100000.0, 1500000.0],\n    [4800000.0, 1500000.0]]]},\n 'proj:transform': [20, 0, 4800000, 0, -20, 1800000],\n 'sat:orbit_state': 'ascending',\n 'sar:product_type': 'GRD',\n 'slice_gap_filled': False,\n 'sar:polarizations': ['VH', 'VV'],\n 'sar:frequency_band': 'C',\n 'sat:relative_orbit': 117,\n 'sar:instrument_mode': 'IW',\n 'border_noise_removed': True,\n 'sar:center_frequency': 5.405,\n 'sar:resolution_range': 40,\n 'thermal_noise_removed': True,\n 'sar:resolution_azimuth': 40,\n 'sar:pixel_spacing_range': 20,\n 'sar:observation_direction': 'right',\n 'sar:pixel_spacing_azimuth': 20,\n 'sat:platform_international_designator': '2014-016A'}\nFor now, let’s display only the vertical-vertical (VV) polarized band of the item and some information about the data.\nitem.assets[\"VV\"].extra_fields.get(\"raster:bands\")[0]\n\n{'scale': 10,\n 'nodata': -9999,\n 'offset': 0,\n 'data_type': 'int16',\n 'spatial_resolution': 20}\nIn the EODC STAC catalogue an item can conveniently be displayed using its thumbnail.\nitem.assets[\"thumbnail\"].href\n\n'https://data.eodc.eu/collections/SENTINEL1_SIG0_20M/V1M1R1/EQUI7_EU020M/E048N015T3/SIG0_20221007T170811__VV_A117_E048N015T3_EU020M_V1M1R1_S1AIWGRDH_TUWIEN.tif/thumbnail'\nNow we will plot the data on a map using the thumbnail and the python package folium. This is an easy way to quickly check how the data found by a search query looks on a map.\nmap = folium.Map(\n    location=[(latmin + latmax) / 2, (lonmin + lonmax) / 2],\n    zoom_start=7,\n    zoom_control=False,\n    scrollWheelZoom=False,\n    dragging=False,\n)\n\nfolium.GeoJson(area_of_interest, name=\"Area of Interest\").add_to(map)\n\nfor item in items_eodc:\n    # url leading to display of an item, can also be used as hyperlink\n    image_url = item.assets[\"thumbnail\"].href\n    bounds = item.bbox\n    folium.raster_layers.ImageOverlay(\n        image=image_url,\n        bounds=[[bounds[1], bounds[0]], [bounds[3], bounds[2]]],\n    ).add_to(map)\n\nfolium.LayerControl().add_to(map)\n\nmap\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\nFigure 1: Map of study area. Blue rectangle is the area covered by the discovered data.",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>EO Data Discovery</span>"
    ]
  },
  {
    "objectID": "unit_01/01_in_class_exercise.html#data-reading",
    "href": "unit_01/01_in_class_exercise.html#data-reading",
    "title": "1  In-class Exercise 1: Discover Sentinel 1 data using the EODC STAC catalog",
    "section": "1.2 Data Reading",
    "text": "1.2 Data Reading\nSTAC can also be a useful tool for the discovery of data, however it only loads metadata. This saves memory, but if one would like to do further analysis, the data has to be loaded into memory or downloaded on disk.\nIn the following, we will demonstrate this with the library odc-stac. Here we can define what data will loaded as bands; in this case VV sigma naught. Moreover we can resample the data by providing any coordinate reference system (CRS) and resolution as well as a method for resampling of continuos data (e.g. bilinear resampling). In the example below we use the EQUI7 Grid of Europe and a 20 meter sampling. This is the native format of sigma naught stored at EODC, so there will be no actual resampling. Note, also, that resampling is not advisable for this data, as it is provided on a logarithmic scale. More about this in notebook 2.\nThe chunks argument is an advancement method for performing parallel computations on the data. We will not cover this in further detail.\n\nbands = \"VV\"  # Vertical-vertical polarized\ncrs = \"EPSG:27704\"  # Coordinate Reference System: EQUI7 Grid of Europe\nres = 20  # 20 meter\nchunks = {\"time\": 1, \"latitude\": 1000, \"longitude\": 1000}\nsig0_dc = odc_stac.load(\n    items_eodc,\n    bands=bands,\n    crs=crs,\n    resolution=res,\n    bbox=bounding_box,\n    chunks=chunks,\n    resampling=\"bilinear\",\n)\n\nLet’s have a look at the VV polarized band of the dataset.\n\nsig0_dc.VV\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'VV' (time: 31, y: 18269, x: 16725)&gt; Size: 19GB\ndask.array&lt;VV, shape=(31, 18269, 16725), dtype=int16, chunksize=(1, 18269, 16725), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * y            (y) float64 146kB 1.762e+06 1.762e+06 ... 1.396e+06 1.396e+06\n  * x            (x) float64 134kB 5.052e+06 5.052e+06 ... 5.387e+06 5.387e+06\n    spatial_ref  int32 4B 27704\n  * time         (time) datetime64[ns] 248B 2022-10-01T05:09:56 ... 2022-10-0...\nAttributes:\n    nodata:   -9999xarray.DataArray'VV'time: 31y: 18269x: 16725dask.array&lt;chunksize=(1, 18269, 16725), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n17.64 GiB\n582.79 MiB\n\n\nShape\n(31, 18269, 16725)\n(1, 18269, 16725)\n\n\nDask graph\n31 chunks in 3 graph layers\n\n\nData type\nint16 numpy.ndarray\n\n\n\n\n                                                             16725 18269 31\n\n\n\n\nCoordinates: (4)y(y)float641.762e+06 1.762e+06 ... 1.396e+06units :metreresolution :-20.0crs :EPSG:27704array([1761670., 1761650., 1761630., ..., 1396350., 1396330., 1396310.])x(x)float645.052e+06 5.052e+06 ... 5.387e+06units :metreresolution :20.0crs :EPSG:27704array([5052090., 5052110., 5052130., ..., 5386530., 5386550., 5386570.])spatial_ref()int3227704spatial_ref :PROJCRS[\"WGS 84 / Equi7 Europe\",BASEGEOGCRS[\"WGS 84\",ENSEMBLE[\"World Geodetic System 1984 ensemble\",MEMBER[\"World Geodetic System 1984 (Transit)\"],MEMBER[\"World Geodetic System 1984 (G730)\"],MEMBER[\"World Geodetic System 1984 (G873)\"],MEMBER[\"World Geodetic System 1984 (G1150)\"],MEMBER[\"World Geodetic System 1984 (G1674)\"],MEMBER[\"World Geodetic System 1984 (G1762)\"],MEMBER[\"World Geodetic System 1984 (G2139)\"],MEMBER[\"World Geodetic System 1984 (G2296)\"],ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]],ENSEMBLEACCURACY[2.0]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"Equi7 projection - Europe\",METHOD[\"Azimuthal Equidistant\",ID[\"EPSG\",1125]],PARAMETER[\"Latitude of natural origin\",53,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",24,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",5837287.82,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",2121415.696,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1]],USAGE[SCOPE[\"Continental mapping of raster data.\"],AREA[\"Europe including Russia west of the Ural Mountains.\"],BBOX[29.24,-42.52,83.67,51.73]],ID[\"EPSG\",27704]]crs_wkt :PROJCRS[\"WGS 84 / Equi7 Europe\",BASEGEOGCRS[\"WGS 84\",ENSEMBLE[\"World Geodetic System 1984 ensemble\",MEMBER[\"World Geodetic System 1984 (Transit)\"],MEMBER[\"World Geodetic System 1984 (G730)\"],MEMBER[\"World Geodetic System 1984 (G873)\"],MEMBER[\"World Geodetic System 1984 (G1150)\"],MEMBER[\"World Geodetic System 1984 (G1674)\"],MEMBER[\"World Geodetic System 1984 (G1762)\"],MEMBER[\"World Geodetic System 1984 (G2139)\"],MEMBER[\"World Geodetic System 1984 (G2296)\"],ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]],ENSEMBLEACCURACY[2.0]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"Equi7 projection - Europe\",METHOD[\"Azimuthal Equidistant\",ID[\"EPSG\",1125]],PARAMETER[\"Latitude of natural origin\",53,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",24,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",5837287.82,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",2121415.696,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1]],USAGE[SCOPE[\"Continental mapping of raster data.\"],AREA[\"Europe including Russia west of the Ural Mountains.\"],BBOX[29.24,-42.52,83.67,51.73]],ID[\"EPSG\",27704]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984 ensembleprojected_crs_name :WGS 84 / Equi7 Europegrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.82false_northing :2121415.696GeoTransform :5052080 20 0 1761680 0 -20array(27704, dtype=int32)time(time)datetime64[ns]2022-10-01T05:09:56 ... 2022-10-...array(['2022-10-01T05:09:56.000000000', '2022-10-01T05:10:21.000000000',\n       '2022-10-01T05:10:46.000000000', '2022-10-01T05:11:11.000000000',\n       '2022-10-01T05:11:36.000000000', '2022-10-02T16:58:39.000000000',\n       '2022-10-02T16:59:04.000000000', '2022-10-02T16:59:29.000000000',\n       '2022-10-02T16:59:54.000000000', '2022-10-03T04:53:37.000000000',\n       '2022-10-03T04:54:02.000000000', '2022-10-03T04:54:27.000000000',\n       '2022-10-03T04:54:52.000000000', '2022-10-03T18:02:55.000000000',\n       '2022-10-04T05:34:54.000000000', '2022-10-04T05:35:19.000000000',\n       '2022-10-04T16:42:01.000000000', '2022-10-04T16:42:26.000000000',\n       '2022-10-04T16:42:51.000000000', '2022-10-04T16:43:16.000000000',\n       '2022-10-04T16:43:41.000000000', '2022-10-06T05:18:07.000000000',\n       '2022-10-06T05:18:32.000000000', '2022-10-06T05:18:57.000000000',\n       '2022-10-06T05:19:22.000000000', '2022-10-06T05:19:47.000000000',\n       '2022-10-07T17:06:31.000000000', '2022-10-07T17:06:56.000000000',\n       '2022-10-07T17:07:21.000000000', '2022-10-07T17:07:46.000000000',\n       '2022-10-07T17:08:11.000000000'], dtype='datetime64[ns]')Indexes: (3)yPandasIndexPandasIndex(Index([1761670.0, 1761650.0, 1761630.0, 1761610.0, 1761590.0, 1761570.0,\n       1761550.0, 1761530.0, 1761510.0, 1761490.0,\n       ...\n       1396490.0, 1396470.0, 1396450.0, 1396430.0, 1396410.0, 1396390.0,\n       1396370.0, 1396350.0, 1396330.0, 1396310.0],\n      dtype='float64', name='y', length=18269))xPandasIndexPandasIndex(Index([5052090.0, 5052110.0, 5052130.0, 5052150.0, 5052170.0, 5052190.0,\n       5052210.0, 5052230.0, 5052250.0, 5052270.0,\n       ...\n       5386390.0, 5386410.0, 5386430.0, 5386450.0, 5386470.0, 5386490.0,\n       5386510.0, 5386530.0, 5386550.0, 5386570.0],\n      dtype='float64', name='x', length=16725))timePandasIndexPandasIndex(DatetimeIndex(['2022-10-01 05:09:56', '2022-10-01 05:10:21',\n               '2022-10-01 05:10:46', '2022-10-01 05:11:11',\n               '2022-10-01 05:11:36', '2022-10-02 16:58:39',\n               '2022-10-02 16:59:04', '2022-10-02 16:59:29',\n               '2022-10-02 16:59:54', '2022-10-03 04:53:37',\n               '2022-10-03 04:54:02', '2022-10-03 04:54:27',\n               '2022-10-03 04:54:52', '2022-10-03 18:02:55',\n               '2022-10-04 05:34:54', '2022-10-04 05:35:19',\n               '2022-10-04 16:42:01', '2022-10-04 16:42:26',\n               '2022-10-04 16:42:51', '2022-10-04 16:43:16',\n               '2022-10-04 16:43:41', '2022-10-06 05:18:07',\n               '2022-10-06 05:18:32', '2022-10-06 05:18:57',\n               '2022-10-06 05:19:22', '2022-10-06 05:19:47',\n               '2022-10-07 17:06:31', '2022-10-07 17:06:56',\n               '2022-10-07 17:07:21', '2022-10-07 17:07:46',\n               '2022-10-07 17:08:11'],\n              dtype='datetime64[ns]', name='time', freq=None))Attributes: (1)nodata :-9999\n\n\n\nAs we can see, the data is stored as a xarray DataArray. Xarray is a convenient package for multidimensional labeled arrays, like temperature, humidity, pressure, different bands of satellite imagery, and so on. The link provides detailed documentation. In a later notebook we will explore some more of the functionality of xarray. As we can see in the coordinates, the data here consists of 21 time steps.\nIn general, data from STAC is “lazily” loaded, which means that the structure of the DataArray is constructed, but the data is not loaded yet. It is loaded only at instance when it is needed, for example, for plotting, computations, and so on.\nSince the DataArray has currently a size of almost 18 GiB, we will subset it to the region of Vienna.\n\n# Create a bounding box covering the region of Vienna\nlatmin_smaller, latmax_smaller = 48, 48.4\nlonmin_smaller, lonmax_smaller = 16, 16.5\n\nsmaller_bounding_box = [\n    [latmin_smaller, lonmin_smaller],\n    [latmax_smaller, lonmax_smaller],\n]\n\nmap = folium.Map(\n    location=[\n        (latmin_smaller + latmax_smaller) / 2,\n        (lonmin_smaller + lonmax_smaller) / 2,\n    ],\n    zoom_start=8,\n    zoom_control=False,\n    scrollWheelZoom=False,\n    dragging=False,\n)\n\nfolium.GeoJson(area_of_interest, name=\"Area of Interest\").add_to(map)\n\nfolium.Rectangle(\n    bounds=smaller_bounding_box,\n    color=\"red\",\n).add_to(map)\n\nfor item in items_eodc:\n    image_url = item.assets[\"thumbnail\"].href\n    bounds = item.bbox\n    folium.raster_layers.ImageOverlay(\n        image=image_url,\n        bounds=[[bounds[1], bounds[0]], [bounds[3], bounds[2]]],\n    ).add_to(map)\n\nfolium.LayerControl().add_to(map)\n\nmap\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\nFigure 2: Map of study area. Blue rectangle is the area covered by the discovered data. Red rectangle covers the selected data.\nCreate a new dataset with the smaller bounding box covering the region of Vienna. We will leave out the arguments for resampling and directly use the native format as defined in the metadata.\n\nsig0_dc = odc_stac.load(\n    items_eodc,\n    bands=bands,\n    bbox=[lonmin_smaller, latmin_smaller, lonmax_smaller, latmax_smaller],\n    chunks=chunks,\n)\n\nDue to the way the data is acquired and stored, some items include “no data” areas. In our case, no data has the value -9999, but this can vary from data provider to data provider. This information can usually be found in the metadata. Furthermore, to save memory, data is often stored as integer (e.g. 25) and not in float (e.g. 2.5) format. For this reason, the backscatter values are often multiplied by a scale factor, in this case factor 10.\nAs Sentinel-1 satellites overpasses Austria every few days, only some time steps of the dataset will have physical data. As a final step, we will now decode the data and create a plot of two consecutive Sentinel-1 acquisitions of Vienna.\n\n# Retrieve the scale factor and NoData value from the metadata. raster:bands is\n# a STAC raster extension\nscale = item.assets[\"VV\"].extra_fields.get(\"raster:bands\")[0][\"scale\"]\nnodata = item.assets[\"VV\"].extra_fields.get(\"raster:bands\")[0][\"nodata\"]\n\n# Decode data with the NoData value and the scale factor\nsig0_dc = sig0_dc.where(sig0_dc != nodata) / scale\n\n# We should remove unnecessary dates when there was no data\n# (no satellite overpass)\nsig0_dc = sig0_dc.dropna(dim=\"time\")\n\n\nsig0_dc.VV.plot(col=\"time\", robust=True, cmap=\"Greys_r\", aspect=1, size=10)\n\n\n\n\n\n\n\n\nFigure 3: Sentinel-1 microwave backscatter image for two timeslices.",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>EO Data Discovery</span>"
    ]
  },
  {
    "objectID": "unit_01/02_in_class_exercise.html",
    "href": "unit_01/02_in_class_exercise.html",
    "title": "2  In-class Exercise 2: Unit Conversion",
    "section": "",
    "text": "2.1 Exploring the Data\nLet’s start by loading some sample data, in order to demonstrate why this conversion is important. Here we will have a look at some SAR data from the Sentinel-1. The data is provided in decibels (dB). In the following example, we will:",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Unit Conversions</span>"
    ]
  },
  {
    "objectID": "unit_01/02_in_class_exercise.html#exploring-the-data",
    "href": "unit_01/02_in_class_exercise.html#exploring-the-data",
    "title": "2  In-class Exercise 2: Unit Conversion",
    "section": "",
    "text": "load data from Sentinel-1\nvisualize the data in logarithmic scale\ncompare the data with linear scale",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Unit Conversions</span>"
    ]
  },
  {
    "objectID": "unit_01/02_in_class_exercise.html#search-for-some-data",
    "href": "unit_01/02_in_class_exercise.html#search-for-some-data",
    "title": "2  In-class Exercise 2: Unit Conversion",
    "section": "2.2 Search for some Data",
    "text": "2.2 Search for some Data\nNow, we start by loading data from Sentinel-1 from the EODC STAC Catalogue. We do this in the same way as in the previous notebook 1.\n\nlatmin, latmax = 48, 48.5\nlonmin, lonmax = 16, 17\nbounds = (lonmin, latmin, lonmax, latmax)\n\ntime_range = \"2022-01-01/2022-12-30\"\n\nitems = (\n    pystac_client.Client.open(\"https://stac.eodc.eu/api/v1\")\n    .search(\n        bbox=bounds,\n        collections=[\"SENTINEL1_SIG0_20M\"],\n        datetime=time_range,\n        limit=100,\n    )\n    .item_collection()\n)\n\nprint(len(items), \"scenes found\")\n\n708 scenes found\n\n\n\nbands = \"VV\"\ncrs = \"EPSG:27704\"  # Coordinate Reference System: EQUI7 Grid of Europe\nres = 20  # 20 meter\n\nsig0_dc = odc.stac.stac_load(\n    items,\n    bands=bands,\n    bbox=bounds,\n    chunks={\"time\": 5, \"x\": 600, \"y\": 600},\n)\n\nnodata = items[0].assets[\"VV\"].extra_fields[\"raster:bands\"][0][\"nodata\"]\nscale = items[0].assets[\"VV\"].extra_fields[\"raster:bands\"][0][\"scale\"]\n\nsig0_dc = (sig0_dc.where(sig0_dc != nodata) / scale).VV\nsig0_dc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'VV' (time: 708, y: 3150, x: 3978)&gt; Size: 35GB\ndask.array&lt;truediv, shape=(708, 3150, 3978), dtype=float32, chunksize=(5, 600, 600), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * y            (y) float64 25kB 1.653e+06 1.653e+06 ... 1.59e+06 1.59e+06\n  * x            (x) float64 32kB 5.241e+06 5.241e+06 ... 5.32e+06 5.32e+06\n    spatial_ref  int32 4B 27704\n  * time         (time) datetime64[ns] 6kB 2022-01-01T16:42:42 ... 2022-12-29...xarray.DataArray'VV'time: 708y: 3150x: 3978dask.array&lt;chunksize=(5, 600, 600), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n33.05 GiB\n6.87 MiB\n\n\nShape\n(708, 3150, 3978)\n(5, 600, 600)\n\n\nDask graph\n5964 chunks in 7 graph layers\n\n\nData type\nfloat32 numpy.ndarray\n\n\n\n\n                                                                                   3978 3150 708\n\n\n\n\nCoordinates: (4)y(y)float641.653e+06 1.653e+06 ... 1.59e+06units :metreresolution :-20.0crs :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]]]array([1653150., 1653130., 1653110., ..., 1590210., 1590190., 1590170.])x(x)float645.241e+06 5.241e+06 ... 5.32e+06units :metreresolution :20.0crs :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]]]array([5240690., 5240710., 5240730., ..., 5320190., 5320210., 5320230.])spatial_ref()int3227704spatial_ref :PROJCRS[\"Azimuthal_Equidistant\",BASEGEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"unnamed\",METHOD[\"Azimuthal Equidistant\",ID[\"EPSG\",1125]],PARAMETER[\"Latitude of natural origin\",53,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",24,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",5837287.81977,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",2121415.69617,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]crs_wkt :PROJCRS[\"Azimuthal_Equidistant\",BASEGEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"unnamed\",METHOD[\"Azimuthal Equidistant\",ID[\"EPSG\",1125]],PARAMETER[\"Latitude of natural origin\",53,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",24,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",5837287.81977,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",2121415.69617,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617GeoTransform :5240680 20 0 1653160 0 -20array(27704, dtype=int32)time(time)datetime64[ns]2022-01-01T16:42:42 ... 2022-12-...array(['2022-01-01T16:42:42.000000000', '2022-01-01T16:43:07.000000000',\n       '2022-01-01T16:43:32.000000000', ..., '2022-12-29T05:18:05.000000000',\n       '2022-12-29T05:18:30.000000000', '2022-12-29T05:18:55.000000000'],\n      dtype='datetime64[ns]')Indexes: (3)yPandasIndexPandasIndex(Index([1653150.0, 1653130.0, 1653110.0, 1653090.0, 1653070.0, 1653050.0,\n       1653030.0, 1653010.0, 1652990.0, 1652970.0,\n       ...\n       1590350.0, 1590330.0, 1590310.0, 1590290.0, 1590270.0, 1590250.0,\n       1590230.0, 1590210.0, 1590190.0, 1590170.0],\n      dtype='float64', name='y', length=3150))xPandasIndexPandasIndex(Index([5240690.0, 5240710.0, 5240730.0, 5240750.0, 5240770.0, 5240790.0,\n       5240810.0, 5240830.0, 5240850.0, 5240870.0,\n       ...\n       5320050.0, 5320070.0, 5320090.0, 5320110.0, 5320130.0, 5320150.0,\n       5320170.0, 5320190.0, 5320210.0, 5320230.0],\n      dtype='float64', name='x', length=3978))timePandasIndexPandasIndex(DatetimeIndex(['2022-01-01 16:42:42', '2022-01-01 16:43:07',\n               '2022-01-01 16:43:32', '2022-01-03 05:17:59',\n               '2022-01-03 05:18:24', '2022-01-03 05:18:49',\n               '2022-01-06 16:50:45', '2022-01-06 16:51:10',\n               '2022-01-06 16:51:35', '2022-01-08 16:34:40',\n               ...\n               '2022-12-25 16:59:51', '2022-12-26 04:53:34',\n               '2022-12-26 04:53:59', '2022-12-26 04:54:24',\n               '2022-12-27 16:42:48', '2022-12-27 16:43:13',\n               '2022-12-27 16:43:38', '2022-12-29 05:18:05',\n               '2022-12-29 05:18:30', '2022-12-29 05:18:55'],\n              dtype='datetime64[ns]', name='time', length=708, freq=None))Attributes: (0)",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Unit Conversions</span>"
    ]
  },
  {
    "objectID": "unit_01/02_in_class_exercise.html#comparison-of-the-data-in-db-and-linear-scale",
    "href": "unit_01/02_in_class_exercise.html#comparison-of-the-data-in-db-and-linear-scale",
    "title": "2  In-class Exercise 2: Unit Conversion",
    "section": "2.3 Comparison of the Data in dB and Linear Scale",
    "text": "2.3 Comparison of the Data in dB and Linear Scale\nIn the next two cells we will select a subset of the data. This is done to reduce the amount of data we are working with. The precice workflow is not important for now, since the theory is explained after the cells. They are just here to show the data we are working with.\n\nsubset = sig0_dc.sel(time=slice(\"2022-07-01\", \"2022-07-07\"))\nsubset = subset.dropna(\"time\", how=\"all\")\n\nNow plot the data.\n\naoi = subset.isel(time=0, x=slice(0, 500), y=slice(0, 500))\naoi_lin = 10 ** (aoi / 10)\n\nfig, ax = plt.subplots(2, 3, figsize=(14, 8))\n# upper left\nax_ul = ax[0, 0]\naoi.plot.imshow(robust=True, ax=ax_ul, cmap=\"Greys_r\")\nax_ul.set_title(r\"$\\sigma^0$ [$dB$] (robust plot)\")\nax_ul.axes.set_aspect(\"equal\")\n\n# upper middle\nax_um = ax[0, 1]\naoi.plot.imshow(robust=False, ax=ax_um, cmap=\"Greys_r\")\nax_um.set_title(r\"$\\sigma^0$ [$dB$] (not robust plot)\")\nax_um.axes.set_aspect(\"equal\")\n\n# upper right\nax_ur = ax[0, 2]\naoi.plot.hist(bins=50, ax=ax_ur, edgecolor=\"black\")\nax_ur.set_xlabel(r\"$\\sigma^0$ [$dB$]\")\nax_ur.set_title(r\"$\\sigma^0$ [$dB$] distribution\")\nax_ur.set_ylabel(\"n (number of pixels)\")\n\n# lower left\nax_ll = ax[1, 0]\naoi_lin.plot.imshow(robust=True, ax=ax_ll, cmap=\"Greys_r\")\nax_ll.set_title(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$] (robust plot)\")\nax_ll.axes.set_aspect(\"equal\")\n\n# lower middle\nax_lm = ax[1, 1]\naoi_lin.plot.imshow(robust=False, ax=ax_lm, cmap=\"Greys_r\")\nax_lm.set_title(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$] (not robust plot)\")\nax_lm.axes.set_aspect(\"equal\")\n\n# lower right\nax_lr = ax[1, 2]\naoi_lin.plot.hist(bins=50, ax=ax_lr, edgecolor=\"black\")\nax_lr.set_xlabel(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$]\")\nax_lr.set_ylabel(\"n (number of pixels)\")\nax_lr.set_title(r\"$\\sigma^0$ [$m^2 \\cdot m^{-2}$] distribution\")\n\ntitle = (\n    r\"Sentinel-1 backscatter $\\sigma^0$ comparison\"\n    + r\" in linear and logarithmic domain\"\n)\nfig.suptitle(title, horizontalalignment=\"center\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\nFigure 1: Visually comparing \\(\\sigma^0\\) on a logarithmic and linear scale (left column). In addition, the benefit of using the robust plotting method is shown (middle column). The robust argument uses the 2nd and 98th percentiles of the data to compute the color limits to eliminate washing out the plot due to data outliers.\nIn the plot above you can see the difference between the two scales. The values in dB are more evenly distributed and are therefore easier to plot. The values in linear scale are more spread out and are therefore harder to interpret. This is why we use the dB scale for plotting/visualization.\nWhile the logarithmic scale facilitates visual interpretation, it has implications for mathematical operations. In the following, we’ll have a closer look at this. But first, let’s see how we can convert between the linear and the logarithmic domains.",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Unit Conversions</span>"
    ]
  },
  {
    "objectID": "unit_01/02_in_class_exercise.html#conversion-formulas",
    "href": "unit_01/02_in_class_exercise.html#conversion-formulas",
    "title": "2  In-class Exercise 2: Unit Conversion",
    "section": "2.4 Conversion Formulas",
    "text": "2.4 Conversion Formulas\nThe decibel (dB) is a logarithmic unit used to express the ratio of two values of a physical quantity, often power or intensity. In the case of SAR data, the backscatter coefficient is often expressed in dB to facilitate visualization.\nIn order to convert the data from dB to linear scale, we use the following formula. Let \\(D\\) be the original value (dB) and \\(I\\) the converted value (\\(m^2m^{-2}\\)). The conversion of units can be expressed as: \\[\nD =  10  \\cdot \\log_{10} (I) = 10 \\cdot \\log_{10} (e) \\cdot \\ln (I)\\longrightarrow [dB]\n\\] Similarly, the conversion back to the original unit can be expressed as: \\[\nI = e^{\\frac{D}{10\\cdot \\log_{10}(e)}} = 10^{\\frac{D}{10}} \\longrightarrow [m^2m^{-2}]  \n\\] You can find these formulas in the script for Microwave Remote Sensing on page 136 (equation 6.40).\nNow let’s implement the conversion in Python.\n\ndef lin2db(val: float | int) -&gt; float:\n    \"\"\"\n    Converts value from linear to dB units.\n\n    :param val: Value in linear units.\n    :type val: float|int\n    :return: Value in dB.\n    :rtype: float\n    \"\"\"\n    return 10 * np.log10(val)\n\n\ndef db2lin(val: float | int) -&gt; float:\n    \"\"\"\n    Converts value from dB to linear units.\n\n    :param val: Value in dB.\n    :type val: float|int\n    :return: Value in linear units.\n    :rtype: float\n    \"\"\"\n    return 10 ** (val / 10)\n\nWhen performing mathematical operations with SAR data it is important to be aware, that adding values in the logarithmic scale doesn’t work in the same way as adding regular (linear) values. This is because in the logarithmic scale, each unit step represents an equal multiplication. This means that an addition of two values in the logarithmic scale equals a multiplication of the values in the linear scale. Vice versa, a subtraction in a logarithmic scale equals a division in a linear scale. Let’s have a look at an example, where we add two values, once without the conversion to linear scale and once with the conversion to linear scale.\n\n# Logarithmic addition\n# Values in linear and decibel units\nval1_db, val2_db = 10, 12\n\n# Logarithmic addition\nsum_db = val1_db + val2_db\nprint(\"Logarithmic Addition:\")\nprint(f\"Logarithmic values: \\t{val1_db: &lt;5}, {val2_db: &lt;5} [dB]\")\nprint(f\"Logarithmic sum: \\t{val1_db} + {val2_db} = {sum_db: &lt;5} [dB]\")\n\n# Linear addition\nval1_lin, val2_lin = db2lin(val1_db), db2lin(val2_db)\nsum_lin = val1_lin + val2_lin\nprint(\"\\nLinear Addition:\")\nprint(f\"\"\"Linear values: \\t\\t{val1_lin: &lt;5}, {val2_lin: &lt;5.2f} [lin]\n      \\t\\t\\t(converted from dB)\"\"\")\nprint(f\"Linear sum: \\t\\t{val1_lin} + {val2_lin: .2f} = {sum_lin: .2f} [lin]\")\nprint(f\"\\t\\t\\t= {lin2db(sum_lin): .2f} [dB]\")\n\nLogarithmic Addition:\nLogarithmic values:     10   , 12    [dB]\nLogarithmic sum:    10 + 12 = 22    [dB]\n\nLinear Addition:\nLinear values:      10.0 , 15.85 [lin]\n                (converted from dB)\nLinear sum:         10.0 +  15.85 =  25.85 [lin]\n            =  14.12 [dB]\n\n\nAs you can see, the values in dB and in linear scale differ quite a bit. In the example above, the values differ by a factor of around 6 when looked at in linear scale.\nNow that we have some data, we will have a look at some practical examples where we will convert the data to linear scale. When we try to calculate the average \\(\\sigma^0\\) value across the scene, we need to do this by converting the data to linear scale first and then calculating the average and converting it back to dB.\n\n2.4.1 Creating a Monthly Mosaic\nSo in the beginning we have lazily loaded data for an area across a whole year. We therefore have around 700 images. We will now essentially compress the data of each month into one timestamp. This is done by using the resampling method together with an operation method like mean that includes summation. Since the data is in dB we need to convert it to linear scale first, then we can resample the data and convert it back to dB.\n\n# Convert to linear scale and calculate monthly means\n# Conversion by calculating with the xarray Object\nsig0_lin = 10 ** (sig0_dc / 10)\n\n# Resample to monthly means. Time accepts intervals identical to the pandas\n# resample function. 'D' for days, 'W' for weeks, 'ME' for months.\nsig0_lin_monthly = sig0_lin.resample(time=\"1ME\").mean()\n\n# Convert back to dB scale\n# Conversion by applying a function\nsig0_monthly = lin2db(sig0_lin_monthly)\nsig0_monthly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'VV' (time: 12, y: 3150, x: 3978)&gt; Size: 601MB\ndask.array&lt;mul, shape=(12, 3150, 3978), dtype=float32, chunksize=(1, 600, 600), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * y            (y) float64 25kB 1.653e+06 1.653e+06 ... 1.59e+06 1.59e+06\n  * x            (x) float64 32kB 5.241e+06 5.241e+06 ... 5.32e+06 5.32e+06\n    spatial_ref  int32 4B 27704\n  * time         (time) datetime64[ns] 96B 2022-01-31 2022-02-28 ... 2022-12-31xarray.DataArray'VV'time: 12y: 3150x: 3978dask.array&lt;chunksize=(1, 600, 600), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n573.61 MiB\n1.37 MiB\n\n\nShape\n(12, 3150, 3978)\n(1, 600, 600)\n\n\nDask graph\n504 chunks in 60 graph layers\n\n\nData type\nfloat32 numpy.ndarray\n\n\n\n\n                                                                     3978 3150 12\n\n\n\n\nCoordinates: (4)y(y)float641.653e+06 1.653e+06 ... 1.59e+06units :metreresolution :-20.0crs :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]]]array([1653150., 1653130., 1653110., ..., 1590210., 1590190., 1590170.])x(x)float645.241e+06 5.241e+06 ... 5.32e+06units :metreresolution :20.0crs :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]]]array([5240690., 5240710., 5240730., ..., 5320190., 5320210., 5320230.])spatial_ref()int3227704spatial_ref :PROJCRS[\"Azimuthal_Equidistant\",BASEGEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"unnamed\",METHOD[\"Azimuthal Equidistant\",ID[\"EPSG\",1125]],PARAMETER[\"Latitude of natural origin\",53,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",24,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",5837287.81977,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",2121415.69617,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]crs_wkt :PROJCRS[\"Azimuthal_Equidistant\",BASEGEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"unnamed\",METHOD[\"Azimuthal Equidistant\",ID[\"EPSG\",1125]],PARAMETER[\"Latitude of natural origin\",53,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",24,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",5837287.81977,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",2121415.69617,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617GeoTransform :5240680 20 0 1653160 0 -20array(27704, dtype=int32)time(time)datetime64[ns]2022-01-31 ... 2022-12-31array(['2022-01-31T00:00:00.000000000', '2022-02-28T00:00:00.000000000',\n       '2022-03-31T00:00:00.000000000', '2022-04-30T00:00:00.000000000',\n       '2022-05-31T00:00:00.000000000', '2022-06-30T00:00:00.000000000',\n       '2022-07-31T00:00:00.000000000', '2022-08-31T00:00:00.000000000',\n       '2022-09-30T00:00:00.000000000', '2022-10-31T00:00:00.000000000',\n       '2022-11-30T00:00:00.000000000', '2022-12-31T00:00:00.000000000'],\n      dtype='datetime64[ns]')Indexes: (3)yPandasIndexPandasIndex(Index([1653150.0, 1653130.0, 1653110.0, 1653090.0, 1653070.0, 1653050.0,\n       1653030.0, 1653010.0, 1652990.0, 1652970.0,\n       ...\n       1590350.0, 1590330.0, 1590310.0, 1590290.0, 1590270.0, 1590250.0,\n       1590230.0, 1590210.0, 1590190.0, 1590170.0],\n      dtype='float64', name='y', length=3150))xPandasIndexPandasIndex(Index([5240690.0, 5240710.0, 5240730.0, 5240750.0, 5240770.0, 5240790.0,\n       5240810.0, 5240830.0, 5240850.0, 5240870.0,\n       ...\n       5320050.0, 5320070.0, 5320090.0, 5320110.0, 5320130.0, 5320150.0,\n       5320170.0, 5320190.0, 5320210.0, 5320230.0],\n      dtype='float64', name='x', length=3978))timePandasIndexPandasIndex(DatetimeIndex(['2022-01-31', '2022-02-28', '2022-03-31', '2022-04-30',\n               '2022-05-31', '2022-06-30', '2022-07-31', '2022-08-31',\n               '2022-09-30', '2022-10-31', '2022-11-30', '2022-12-31'],\n              dtype='datetime64[ns]', name='time', freq='ME'))Attributes: (0)\n\n\n\nThe dataset has now only 12 timestamps, one for each month. Next, we want to calculate the average \\(\\sigma^0\\) value across the scene for one month. We will do this again by converting the data to linear scale first and then calculating the average and converting it back to dB.\n\n# Lets take a data array with db values\ndb_array = sig0_monthly.sel(time=\"2022-07-30\", method=\"nearest\")\n\n# Compute the linear values\nlin_array = db2lin(db_array)\n\n\n# Compute the average backscatter value in linear units across the whole scene\nlin_mean = lin_array.mean()\nprint(f\"Average backscatter value in linear units: {lin_mean.values: .3f}\")\ndb_from_lin_mean = lin2db(lin_mean)\nprint(f\"That value in dB: {db_from_lin_mean.values: .3f}\\n\")\n\n# Compute the average backscatter value in dB across the whole scene\ndb_mean = db_array.mean()\nprint(f\"Average backscatter value in dB: {db_mean.values: .3f}\")\n\nAverage backscatter value in linear units:  0.124\nThat value in dB: -9.060\n\nAverage backscatter value in dB: -10.550\n\n\nAs you can see in the example, the mean values across the scene are different in dB and linear scale. Therefore, it is important to be aware in which scale the data is stored to perform the correct type of mathematical operation or always convert the data to linear scale before doing any calculations.",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Unit Conversions</span>"
    ]
  },
  {
    "objectID": "unit_01/02_in_class_exercise.html#save-mean-mosaic-as-tif-file",
    "href": "unit_01/02_in_class_exercise.html#save-mean-mosaic-as-tif-file",
    "title": "2  In-class Exercise 2: Unit Conversion",
    "section": "2.5 Save Mean Mosaic as Tif File",
    "text": "2.5 Save Mean Mosaic as Tif File\nOften we want to store the output of a computation permanently on a file system. The most common file format for this is a GeoTIFF (TIF file with additional information on the georeference). The following cell indicates how this can be easily done with Xarray. When we want to store the data as a GeoTIFF we need to make sure to provide a spatial reference to geolocate the data. The best way to check whether the Xarray has a coordinate reference system (CRS) is by using the rioxarray rio.crs accessor. More about this in notebook 4.\n\n# Select some data which we want to save\ndata_2_save = sig0_monthly.sel(time=\"2022-07-30\", method=\"nearest\")\ndata_2_save.rio.crs\n\nCRS.from_wkt('PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]')\n\n\nIn this case, the spatial reference is the EPSG Code EPSG:27704, which is the Equi7Grid Europe. As the output dataarray already has a spatial reference we now save it as a raster file\n\n# Save the data\ndata_2_save.rio.to_raster(\n    \"sig0_mean_mosaic_july.tif\", tiled=True, driver=\"GTiff\", compress=\"LZW\"\n)\n\n\n# Load the data again (for demonstration purposes)\nloaded_data = xr.open_dataset(\"sig0_mean_mosaic_july.tif\", engine=\"rasterio\")\nloaded_data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 50MB\nDimensions:      (band: 1, x: 3978, y: 3150)\nCoordinates:\n  * band         (band) int64 8B 1\n  * x            (x) float64 32kB 5.241e+06 5.241e+06 ... 5.32e+06 5.32e+06\n  * y            (y) float64 25kB 1.653e+06 1.653e+06 ... 1.59e+06 1.59e+06\n    spatial_ref  int64 8B ...\nData variables:\n    band_data    (band, y, x) float32 50MB ...xarray.DatasetDimensions:band: 1x: 3978y: 3150Coordinates: (4)band(band)int641array([1])x(x)float645.241e+06 5.241e+06 ... 5.32e+06array([5240690., 5240710., 5240730., ..., 5320190., 5320210., 5320230.])y(y)float641.653e+06 1.653e+06 ... 1.59e+06array([1653150., 1653130., 1653110., ..., 1590210., 1590190., 1590170.])spatial_ref()int64...crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]GeoTransform :5240680.0 20.0 0.0 1653160.0 0.0 -20.0[1 values with dtype=int64]Data variables: (1)band_data(band, y, x)float32...AREA_OR_POINT :Arealong_name :VV[12530700 values with dtype=float32]Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([5240690.0, 5240710.0, 5240730.0, 5240750.0, 5240770.0, 5240790.0,\n       5240810.0, 5240830.0, 5240850.0, 5240870.0,\n       ...\n       5320050.0, 5320070.0, 5320090.0, 5320110.0, 5320130.0, 5320150.0,\n       5320170.0, 5320190.0, 5320210.0, 5320230.0],\n      dtype='float64', name='x', length=3978))yPandasIndexPandasIndex(Index([1653150.0, 1653130.0, 1653110.0, 1653090.0, 1653070.0, 1653050.0,\n       1653030.0, 1653010.0, 1652990.0, 1652970.0,\n       ...\n       1590350.0, 1590330.0, 1590310.0, 1590290.0, 1590270.0, 1590250.0,\n       1590230.0, 1590210.0, 1590190.0, 1590170.0],\n      dtype='float64', name='y', length=3150))Attributes: (0)",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Unit Conversions</span>"
    ]
  },
  {
    "objectID": "unit_01/03_in_class_exercise.html",
    "href": "unit_01/03_in_class_exercise.html",
    "title": "3  In-class Exercise 3: Backscattering Coefficients",
    "section": "",
    "text": "3.1 Loading Backscatter Data\nWe first load our data with xarray, select an area of interest, and scale the variables if necessary. For this, we use the following preprocessing function.\ndef _preprocess(x, xlims, ylims, scale):\n    '''\n    Preprocess file.\n\n    Parameters\n    ----------\n    x : xarray.Dataset\n    xlims: tuple\n    ylims: tuple\n\n    Returns\n    -------\n    xarray.Dataset\n    '''\n    x = x * scale\n    x = x.sel(x=slice(*xlims), y=slice(*ylims))\n    x = x.assign_coords(band=[Path(x.encoding[\"source\"]).parent.stem])\n    return x\nThe data is located on the shared folder of your home directory and can be loaded and preprocessed, as follows.\ndata_path = Path(\"~/shared/datasets/rs/sentinel-1\").expanduser()\n\n# longitude and latitude\nxlims, ylims = (9.5, 10), (47.5, 47)\npartial_func = partial(_preprocess, xlims=xlims, ylims=ylims, scale=1)\n\ngtc_dc = xr.open_mfdataset(\n    (data_path / \"gtc\").glob(\"**/*.tif\"),\n    engine=\"rasterio\",\n    combine=\"nested\",\n    concat_dim=\"band\",\n    preprocess=partial_func,\n    join=\"override\",\n    parallel=True\n    ).\\\n    compute()\n\ngtc_dc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 116MB\nDimensions:      (band: 2, y: 3800, x: 3801)\nCoordinates:\n  * x            (x) float64 30kB 9.5 9.5 9.5 9.5 9.501 ... 10.0 10.0 10.0 10.0\n  * y            (y) float64 30kB 47.5 47.5 47.5 47.5 ... 47.0 47.0 47.0 47.0\n    spatial_ref  int64 8B 0\n  * band         (band) &lt;U8 64B 'grd' 'sig0_gtc'\nData variables:\n    band_data    (band, y, x) float32 116MB 151.0 119.0 119.0 ... nan nan nanxarray.DatasetDimensions:band: 2y: 3800x: 3801Coordinates: (4)x(x)float649.5 9.5 9.5 9.5 ... 10.0 10.0 10.0array([9.500026, 9.500158, 9.500289, ..., 9.999676, 9.999808, 9.99994 ])y(y)float6447.5 47.5 47.5 ... 47.0 47.0 47.0array([47.499874, 47.499742, 47.499611, ..., 47.000355, 47.000224, 47.000092])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :9.499960609331326 0.000131556088961555 0.0 47.499939478018426 0.0 -0.00013155608896155463array(0)band(band)&lt;U8'grd' 'sig0_gtc'array(['grd', 'sig0_gtc'], dtype='&lt;U8')Data variables: (1)band_data(band, y, x)float32151.0 119.0 119.0 ... nan nan nanarray([[[151.      , 119.      , 119.      , ...,  88.      ,\n          82.      ,  78.      ],\n        [113.      , 121.      , 110.      , ..., 129.      ,\n         127.      , 105.      ],\n        [ 98.      ,  96.      , 115.      , ..., 119.      ,\n         119.      , 109.      ],\n        ...,\n        [  0.      ,   0.      ,   0.      , ...,        nan,\n                nan,        nan],\n        [  0.      ,   0.      ,   0.      , ...,        nan,\n                nan,        nan],\n        [  0.      ,   0.      ,   0.      , ...,        nan,\n                nan,        nan]],\n\n       [[-12.86    , -12.21    , -11.66    , ...,  -8.639999,\n          -8.849999,  -9.15    ],\n        [-14.21    , -13.61    , -14.2     , ...,  -9.059999,\n         -12.2     , -13.66    ],\n        [-11.42    , -12.19    , -13.65    , ..., -13.44    ,\n         -13.549999, -12.57    ],\n        ...,\n        [       nan,        nan,        nan, ...,        nan,\n                nan,        nan],\n        [       nan,        nan,        nan, ...,        nan,\n                nan,        nan],\n        [       nan,        nan,        nan, ...,        nan,\n                nan,        nan]]], dtype=float32)Indexes: (3)xPandasIndexPandasIndex(Index([9.500026387375808,  9.50015794346477,  9.50028949955373,\n       9.500421055642693, 9.500552611731655, 9.500684167820616,\n       9.500815723909577, 9.500947279998538, 9.501078836087501,\n       9.501210392176462,\n       ...\n       9.998755520629063, 9.998887076718024, 9.999018632806987,\n       9.999150188895948,  9.99928174498491,  9.99941330107387,\n       9.999544857162832, 9.999676413251795, 9.999807969340756,\n       9.999939525429717],\n      dtype='float64', name='x', length=3801))yPandasIndexPandasIndex(Index([47.499873699973946,  47.49974214388499,  47.49961058779602,\n        47.49947903170706,   47.4993474756181,  47.49921591952914,\n       47.499084363440176, 47.498952807351216,  47.49882125126226,\n        47.49868969517329,\n       ...\n        47.00127612280966,  47.00114456672069,  47.00101301063173,\n        47.00088145454277, 47.000749898453805, 47.000618342364845,\n       47.000486786275886, 47.000355230186926,  47.00022367409796,\n          47.000092118009],\n      dtype='float64', name='y', length=3800))bandPandasIndexPandasIndex(Index(['grd', 'sig0_gtc'], dtype='object', name='band'))Attributes: (0)",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Backscattering Coefficients</span>"
    ]
  },
  {
    "objectID": "unit_01/03_in_class_exercise.html#geometric-terrain-correction",
    "href": "unit_01/03_in_class_exercise.html#geometric-terrain-correction",
    "title": "3  In-class Exercise 3: Backscattering Coefficients",
    "section": "3.2 Geometric Terrain Correction",
    "text": "3.2 Geometric Terrain Correction\nLevel 1 SAR data, such as the “GRD” product only takes into account the ellipsoidal model of the earth (i.e. slant-range distortion; script Chapter 4), without the description of the relief. This makes mountains appear to lean towards the radar system as visible in the below plot of the GRD scene. This latter distortion originates from the side-looking geometry of the SAR system. Due to this, the radar pulse reaches mountain slope facing the sensor before it reaches the base. Consequently, these slopes appear compressed and leaning toward the sensor. During processing to a level 1C product, these slant range distortions are partly corrected using a terrain correction algorithm and a Digital Elevation Model (DEM). The most common algorithm for this is the Range Doppler Terrain Correction.\n\nFigure 1: Geometric terrain correction. The lower bar shows the GRD without geometric terrain correction in slant geometry. In areas where the ground is elevated, the time of the signal to travel to the earth’s surface and back to the sensor is distorted, causing geometric shifts (foreshortening, lengthening, etc). Using a DEM and the Range Doppler Terrain Correction, the distortions are corrected and the image is orthorectified. (Source: ESRI)\nLet’s visualize this geometric terrain correction (GTC) with some actual data using the xarray method hvplot of the gtc_dc object.\n\ngtc_dc.hvplot.image(x=\"x\", y=\"y\", robust=True, data_aspect=1, cmap=\"Greys_r\",\n                    groupby=\"band\", rasterize=True).\\\n                        opts(frame_height=600, framewise=False, aspect=\"equal\")\n\n/home/mschobbe/Documents/teaching/notebooks/microwave-remote-sensing/.conda_envs/mrs-env/lib/python3.11/site-packages/numba/np/ufunc/parallel.py:371: NumbaWarning: The TBB threading layer requires TBB version 2021 update 6 or later i.e., TBB_INTERFACE_VERSION &gt;= 12060. Found TBB_INTERFACE_VERSION = 12050. The TBB threading layer is disabled.\n  warnings.warn(problem)\n\n\n\n\n\n\n  \n\n\n\n\nFigure 2: The ground range detected values and geometrically terrain corrected values can be selected on the right-hand side of the graphic.\nThe geometrically terrain corrected values from the gtc_dc object (Figure 1) can be approximated to a certain extent, as we have sufficiently detailed information of topography in this area. This corrects for at least one typically occurring distortion in mountainous regions: “foreshortening”.\n\nFigure 3: Side Looking radar distortions (script Chapter 4).\nForeshortening can be spotted by eye, as it often has a radiometric consequence, where unusually bright areas fringe mountain ridges; a phenomenon called “highlighting”. This geometric artifact occurs due to the compression of the distance in the image of slopes facing the radar system and the consequentially higher density of scatterers per unit length. Now let’s zoom in on an example from the same datacube and display the original and corrected values side-by-side.\n\nfor_dc = gtc_dc.sel(x=slice(9.651, 9.706), y=slice(47.134, 47.079)).band_data\n\nfig, ax = plt.subplots(1, 2, figsize=(20, 8))\n\nbbox = dict(boxstyle=\"round\", fc=\"0.8\")\n\n\nax[1].annotate(\n    \"foreshortening/layover\",\n    xy=(9.674, 47.092),\n    xytext=(0.574, 0.192),\n    textcoords=\"subfigure fraction\",\n    bbox=bbox,\n    arrowprops=dict(facecolor=\"red\", shrink=0.05),\n)\nax[1].annotate(\n    \"radar shadows\",\n    xy=(9.68, 47.119),\n    xytext=(0.6, 0.625),\n    textcoords=\"subfigure fraction\",\n    bbox=bbox,\n    arrowprops=dict(facecolor=\"red\", shrink=0.05),\n)\n\nax[0].axes.set_aspect(\"equal\")\nax[1].axes.set_aspect(\"equal\")\n\nfor_dc.sel(band=\"grd\").plot(ax=ax[0], robust=True, cmap=\"Greys_r\")\nfor_dc.sel(band=\"sig0_gtc\").plot(ax=ax[1], robust=True, cmap=\"Greys_r\")\n\n\n\n\n\n\n\n\nFigure 4: Close-up inspection of geometric distortions in side-looking radar\nAs we can see, not all the geometric distortions can be corrected by the algorithm. Some of the pixels at the mountain ranges appear stretched, as in these areas not enough valid measurements are available. Moreover, we can see dark areas which are indicating radar shadows. These are image areas that could not be captured by the radar sensor and have values close to the noise floor of the Sensor (minimum detectable signal strength) ~ -28dB. It is important to note, that radar shadows are not the same for every image, as they depend on the acquisition geometry, in particular, the incidence angle and the flight direction of the satellite.",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Backscattering Coefficients</span>"
    ]
  },
  {
    "objectID": "unit_01/03_in_class_exercise.html#backscattering-coefficients",
    "href": "unit_01/03_in_class_exercise.html#backscattering-coefficients",
    "title": "3  In-class Exercise 3: Backscattering Coefficients",
    "section": "3.3 Backscattering Coefficients",
    "text": "3.3 Backscattering Coefficients\nIn this chapter, we will look at some of the different backscatter coefficients in more detail (\\(\\sigma^0_E\\) or \\(\\gamma^0_E\\)), where both coefficients are geometrically terrain corrected. The difference is the plane of the reference area, which is the ground area as a tangent on an ellipsoidal Earth model for \\(\\sigma^0_E\\) and perpendicular to the line of sight for \\(\\gamma^0_E\\) (Figure 5). For this, we load a new datacube which includes \\(\\sigma^0_E\\) and the Incidence Angle for each pixel. We visualize the cube with the same method as before.\n\nxlims, ylims = (9.5, 10), (47.5, 47)\npartial_func = partial(_preprocess, xlims=xlims, ylims=ylims, scale=1)\n\ncoef_dc = xr.open_mfdataset(\n    (data_path / \"coefs\").glob(\"**/*.tif\"),\n    engine=\"rasterio\",\n    combine=\"nested\",\n    concat_dim=\"band\",\n    preprocess=partial_func,\n    join=\"override\",\n    parallel=True\n    ).\\\n    compute()\n\n\ncoef_dc.hvplot.image(x=\"x\", y=\"y\", robust=True, data_aspect=1, cmap=\"Greys_r\",\n                     groupby=\"band\", rasterize=True).\\\n                        opts(frame_height=600, framewise=False, aspect=\"equal\")\n\n\n\n\n\n  \n\n\n\n\nFigure 5: The \\(\\sigma^0_E\\) and the incidence angle can be selected on the right-hand side of the graphic.\nIn Figure 5 we can see the incidence angle image of our scene. We can see, that it depicts the differences between near to far range, but not the actual terrain as it refers to the ellipsoid. The slight patterns of the terrain that are visible are originating from the geometric terrain correction. We will use this information now to convert our (\\(\\sigma^0_E\\) to \\(\\gamma^0_E\\)) with the following equation (equation 6.20 in the script):\n\\[ \\gamma^0_E = \\sigma^0_E / \\cos(\\theta_i) \\]\nWe can perform this transformation with basic numpy operations on the xarray datacube.\n\n# linear scale\nsig0_db = (coef_dc.sel(band=\"sig0_gtc\") / 10)\nsig0_lin = 10 ** (coef_dc.sel(band=\"sig0_gtc\") / 10)\n# conversion to gamma\ngam0_lin = sig0_lin / np.cos(np.radians(coef_dc.sel(band=\"incidence_angle\")))\n# dB scale\ngam0_db = 10 * np.log(gam0_lin)\n# add to existing cube\ncoef_dc = xr.concat(\n    [coef_dc.sel(band=\"sig0_gtc\"), gam0_db.expand_dims(band=[\"gam0_gtc\"])],\n    dim=\"band\"\n    )\n\ncoef_dc.hvplot.image(x=\"x\", y=\"y\", robust=False, data_aspect=1, cmap=\"Greys_r\",\n                     groupby=\"band\", rasterize=True).\\\n                        opts(frame_height=600, framewise=False, aspect=\"equal\")\n\n\n\n\n\n  \n\n\n\n\nFigure 6: \\(\\sigma^0_E\\), and \\(\\gamma^0_E\\) can be selected on the right-hand side of the graphic.\nComparing \\(\\sigma^0_E\\) and \\(\\gamma^0_E\\) in the figure, we can see that both look identical except for the range. This is because the only difference between \\(\\sigma^0_E\\) and \\(\\gamma^0_E\\) is the change of the reference area. While \\(\\sigma^0_E\\) is defined to be ground range, \\(\\gamma^0_E\\) is defined to be in the plane perpendicular to the line of sight from the sensor. This way, \\(\\gamma^0_E\\) mitigates the impact of the incidence angle. However, \\(\\gamma^0_E\\) is still based on the ellipsoid and does not account for the impact of the terrain on the radiometry.",
    "crumbs": [
      "Unit 1",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Backscattering Coefficients</span>"
    ]
  },
  {
    "objectID": "unit_02/04_in_class_exercise.html",
    "href": "unit_02/04_in_class_exercise.html",
    "title": "4  In-class Exercise 4: Datacubes",
    "section": "",
    "text": "4.1 Loading Data\nBefore loading the data into memory we will first look at the area covered by the Sentinel-1 dataset on a map. This way we can select a region of interest for our hypothetical study. We will extract and transform the bounds of the data to longitude and latitude.\ndata_path = Path(\"~/shared/datasets/rs/alos\").expanduser()\n\nbbox = xr.open_mfdataset(\n    (data_path / \"sentinel-1\").glob(\"**/*.tif\"),\n    engine=\"rasterio\",\n    combine=\"nested\",\n    concat_dim=\"band\"\n    ).\\\n    rio.transform_bounds(\"EPSG:4326\")\n\nbbox = box(*bbox)\n\nmap = folium.Map(\n    max_bounds=True,\n    location=[bbox.centroid.y, bbox.centroid.x],\n    scrollWheelZoom=False,\n)\n\n# bounds of image\nfolium.GeoJson(mapping(bbox), name=\"Area of Interest\", color=\"red\").add_to(map)\n\n# minimum longitude, minimum latitude, maximum longitude, maximum latitude\narea_of_interest = box(10.3, 45.5, 10.6, 45.6)\n\nfolium.GeoJson(mapping(area_of_interest), name=\"Area of Interest\").add_to(map)\n\nmap\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\nFigure 2: Map of study area. Red rectangle is the area covered by the Sentinel-1 raster. Blue rectangle is the area of interest.\nOn the map we have drawn rectangles of the area covered by the images and of our selected study area. To prevent loading too much data we will now only load the data as defined by the blue rectangle on the folium map.\nThe Sentinel-1 data is stored in the shared folder of the JupyterHub as separate two-dimensional GeoTIFF files with a certain timestamp. The following s1_preprocess function allows to load all files in one go as a spatiotemporal datacube. Basically, the preprocessing function helps reading the timestamp from the file and adds this as a new dimension to the array. The latter allows a concatenation procedure where all files are joined along the new time dimension. In addition by providing area_of_interest.bounds to the parameter bbox we will only load the data of the previously defined area of interest.\ndef s1_preprocess(x, bbox, scale):\n    \"\"\"\n    Preprocess file.\n\n    Parameters\n    ----------\n    x : xarray.Dataset\n    bbox: tuple\n      minimum longitude minimum latitude maximum longitude maximum latitude\n    scale: float\n      scaling factor\n    Returns\n    -------\n    xarray.Dataset\n    \"\"\"\n\n    path = Path(x.encoding[\"source\"])\n    filename = path.name\n    x = x.rio.clip_box(*bbox, crs=\"EPSG:4326\")\n\n    date_str = filename.split(\"_\")[0][1:]\n    time_str = filename.split(\"_\")[1][:6]\n    datetime_str = date_str + time_str\n    date = pd.to_datetime(datetime_str, format=\"%Y%m%d%H%M%S\")\n    x = x.expand_dims(dim={\"time\": [date]})\n\n    x = (\n        x.rename({\"band_data\": \"s1_\" + path.parent.stem})\n        .squeeze(\"band\")\n        .drop_vars(\"band\")\n    )\n\n    return x * scale\nWe load the data again with open_mfdataset and by providing the preprocess function, including the bounds of the area of interest and the scaling factor, as follows:\npartial_ = partial(s1_preprocess, bbox=area_of_interest.bounds, scale=0.01)\n\ns1_ds = xr.open_mfdataset(\n    (data_path / \"sentinel-1\").glob(\"**/*.tif\"),\n    engine=\"rasterio\",\n    combine=\"nested\",\n    chunks=-1,\n    preprocess=partial_,\n)",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datacubes</span>"
    ]
  },
  {
    "objectID": "unit_02/04_in_class_exercise.html#unlocking-geospatial-information",
    "href": "unit_02/04_in_class_exercise.html#unlocking-geospatial-information",
    "title": "4  In-class Exercise 4: Datacubes",
    "section": "4.2 Unlocking Geospatial Information",
    "text": "4.2 Unlocking Geospatial Information\nTo enable further stacking of ALOS-1 and Sentinel-1 data we need to know some more information about the raster. Hence we define the following function print_raster to get the projection (CRS), resolution, and region (bounds). The function leverages the functionality of rioxarray; a package for rasters.\n\ndef print_raster(raster, name):\n    \"\"\"\n    Print Raster Metadata\n\n    Parameters\n    ----------\n    raster: xarray.DataArray|xarray.DataSet\n        raster to process\n    y: string\n        name of product\n    \"\"\"\n\n    print(\n        f\"{name} Raster: \\n----------------\\n\"\n        f\"resolution: {raster.rio.resolution()} {raster.rio.crs.units_factor}\\n\" #noqa\n        f\"bounds: {raster.rio.bounds()}\\n\"\n        f\"CRS: {raster.rio.crs}\\n\"\n    )\n\n\nprint_raster(s1_ds, \"Sentinel-1\")\n\nSentinel-1 Raster: \n----------------\nresolution: (10.0, -10.0) ('metre', 1.0)\nbounds: (4769370.0, 1382090.0, 4794450.0, 1397370.0)\nCRS: EPSG:27704\n\n\n\nThe CRS “EPSG 27704” is part of the EQUI7Grid. This grid provides equal-area tiles, meaning each tile represents the same area, which helps reducing distorsions. This feature is important for remote sensing as it reduces the so-called oversampling due to geometric distortions when projecting on a sphere. This particular projection is developed by TUWien.\nNow we will proceed with loading the ALOS-2 L-band data in much the same fashion as for Sentinel-1. Again timeslices are stored separately as individual GeoTIFFS and they need to be concatenated along the time dimension. We use a slightly different preprocessing function alos_preprocess for this purpose. The most notable difference of this function is the inclusion of a scaling factor for the 16-bit digital numbers (DN):\n\\[\\gamma^0_T = 10 * log_{10}(\\text{DN}^2) - 83.0 \\,dB\\]\nto correctly convert the integers to \\(\\gamma^0_T\\) in the dB range.\n\ndef alos_preprocess(x, bbox):\n    \"\"\"\n    Preprocess file.\n\n    Parameters\n    ----------\n    x : xarray.Dataset\n    bbox: tuple\n      minimum longitude minimum latitude maximum longitude maximum latitude\n    Returns\n    -------\n    xarray.Dataset\n    \"\"\"\n\n    path = Path(x.encoding[\"source\"])\n    filename = path.name\n    x = x.rio.clip_box(*bbox, crs=\"EPSG:4326\")\n\n    date_str = filename.split(\"_\")[0][15:22]\n    date = pd.to_datetime(date_str, format=\"%y%m%d\")\n    x = x.expand_dims(dim={\"time\": [date]})\n\n    x = (\n        x.rename({\"band_data\": \"alos_\" + path.parent.stem})\n        .squeeze(\"band\")\n        .drop_vars(\"band\")\n    )\n\n    # conversion to dB scale of alos\n    return 10 * np.log10(x**2) - 83.0\n\nNow we load the data with the open_mfdataset function of xarray and we provide the preprocessing function (see above), which includes the selection of the bounds of an area of interest and the extraction of time stamps from the file name.\n\narea_of_interest = affinity.scale(area_of_interest, xfact=1.7, yfact=1.7)\npartial_ = partial(alos_preprocess, bbox=area_of_interest.bounds)\n\nalos_ds = xr.open_mfdataset(\n    (data_path / \"alos\").glob(\"**/*.tif\"),\n    engine=\"rasterio\",\n    combine=\"nested\",\n    chunks=-1,\n    preprocess=partial_\n    )\n\nAlso, for this dataset we will look at the metadata in order to compare it with Sentinel-1.\n\nprint_raster(alos_ds, \"ALOS-2\")\n\nALOS-2 Raster: \n----------------\nresolution: (25.0, -25.0) ('metre', 1.0)\nbounds: (593137.5, 5035287.5, 633312.5, 5054912.5)\nCRS: EPSG:32632",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datacubes</span>"
    ]
  },
  {
    "objectID": "unit_02/04_in_class_exercise.html#reprojecting",
    "href": "unit_02/04_in_class_exercise.html#reprojecting",
    "title": "4  In-class Exercise 4: Datacubes",
    "section": "4.3 Reprojecting",
    "text": "4.3 Reprojecting\nThe ALOS-2 is projected on an UTM grid. We would therefore like to reproject this data to match the projection of Sentinel-1. Furthermore, we will upsample the data to match the Sentinel-1 sampling. The rioxarray package has a very convenient method that can do this all in one go:reproject_match. For continuous data it is best to use a bilinear resampling strategy. As always you have to consider again that we deal with values in the dB range, so we need to convert to the linear scale before bilinear resampling.\n\nalos_ds_lin = 10 ** (alos_ds / 10)\nalos_ds_lin = alos_ds_lin.rio.reproject_match(\n    s1_ds,\n    resampling=Resampling.bilinear,\n    )\nalos_ds = 10 * np.log10(alos_ds_lin)\n\nWe will overwrite the coordinate values of ALOS-2 with those of Sentinel-1. If we would not do this last step, small errors in how the numbers are stored would prevent stacking of the rasters.\n\nalos_ds = alos_ds.assign_coords({\n    \"x\": s1_ds.x.data,\n    \"y\": s1_ds.y.data,\n})\n\nLastly, we will turn the xarray.DataSet to an xarray.DataArray where a new dimension will constitute the sensor for measurement (satellite + polarization).\n\ns1_da = s1_ds.to_array(dim=\"sensor\")\nalos_da = alos_ds.to_array(dim=\"sensor\")\ns1_da\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (sensor: 2, time: 9, y: 1528, x: 2508)&gt; Size: 276MB\ndask.array&lt;stack, shape=(2, 9, 1528, 2508), dtype=float32, chunksize=(1, 1, 1528, 2508), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * x            (x) float64 20kB 4.769e+06 4.769e+06 ... 4.794e+06 4.794e+06\n  * y            (y) float64 12kB 1.397e+06 1.397e+06 ... 1.382e+06 1.382e+06\n  * time         (time) datetime64[ns] 72B 2022-06-25T05:27:26 ... 2022-10-11...\n    spatial_ref  int64 8B 0\n  * sensor       (sensor) object 16B 's1_VH' 's1_VV'xarray.DataArraysensor: 2time: 9y: 1528x: 2508dask.array&lt;chunksize=(1, 1, 1528, 2508), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n263.14 MiB\n14.62 MiB\n\n\nShape\n(2, 9, 1528, 2508)\n(1, 1, 1528, 2508)\n\n\nDask graph\n18 chunks in 230 graph layers\n\n\nData type\nfloat32 numpy.ndarray\n\n\n\n\n          2 1                                          2508 1528 9\n\n\n\n\nCoordinates: (5)x(x)float644.769e+06 4.769e+06 ... 4.794e+06axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([4769375., 4769385., 4769395., ..., 4794425., 4794435., 4794445.])y(y)float641.397e+06 1.397e+06 ... 1.382e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([1397365., 1397355., 1397345., ..., 1382115., 1382105., 1382095.])time(time)datetime64[ns]2022-06-25T05:27:26 ... 2022-10-...array(['2022-06-25T05:27:26.000000000', '2022-07-07T05:27:27.000000000',\n       '2022-07-19T05:27:28.000000000', '2022-07-31T05:27:29.000000000',\n       '2022-08-12T05:27:29.000000000', '2022-09-05T05:27:31.000000000',\n       '2022-09-17T05:27:31.000000000', '2022-09-29T05:27:31.000000000',\n       '2022-10-11T05:27:31.000000000'], dtype='datetime64[ns]')spatial_ref()int640crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]GeoTransform :4769370.0 10.0 0.0 1397370.0 0.0 -10.0array(0)sensor(sensor)object's1_VH' 's1_VV'array(['s1_VH', 's1_VV'], dtype=object)Indexes: (4)xPandasIndexPandasIndex(Index([4769375.0, 4769385.0, 4769395.0, 4769405.0, 4769415.0, 4769425.0,\n       4769435.0, 4769445.0, 4769455.0, 4769465.0,\n       ...\n       4794355.0, 4794365.0, 4794375.0, 4794385.0, 4794395.0, 4794405.0,\n       4794415.0, 4794425.0, 4794435.0, 4794445.0],\n      dtype='float64', name='x', length=2508))yPandasIndexPandasIndex(Index([1397365.0, 1397355.0, 1397345.0, 1397335.0, 1397325.0, 1397315.0,\n       1397305.0, 1397295.0, 1397285.0, 1397275.0,\n       ...\n       1382185.0, 1382175.0, 1382165.0, 1382155.0, 1382145.0, 1382135.0,\n       1382125.0, 1382115.0, 1382105.0, 1382095.0],\n      dtype='float64', name='y', length=1528))timePandasIndexPandasIndex(DatetimeIndex(['2022-06-25 05:27:26', '2022-07-07 05:27:27',\n               '2022-07-19 05:27:28', '2022-07-31 05:27:29',\n               '2022-08-12 05:27:29', '2022-09-05 05:27:31',\n               '2022-09-17 05:27:31', '2022-09-29 05:27:31',\n               '2022-10-11 05:27:31'],\n              dtype='datetime64[ns]', name='time', freq=None))sensorPandasIndexPandasIndex(Index(['s1_VH', 's1_VV'], dtype='object', name='sensor'))Attributes: (0)",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datacubes</span>"
    ]
  },
  {
    "objectID": "unit_02/04_in_class_exercise.html#stacking-of-multiple-arrays",
    "href": "unit_02/04_in_class_exercise.html#stacking-of-multiple-arrays",
    "title": "4  In-class Exercise 4: Datacubes",
    "section": "4.4 Stacking of Multiple Arrays",
    "text": "4.4 Stacking of Multiple Arrays\nNow we are finally ready to stack Sentinel-1 C-band and ALOS-2 L-band arrays with the function concat of xarray. Now we can use the newly defined \"sensor\" dimension to concatenate the two arrays.\n\nfused_da = xr.concat([s1_da, alos_da], dim=\"sensor\").rename(\"gam0\")\nfused_da\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'gam0' (sensor: 4, time: 14, y: 1528, x: 2508)&gt; Size: 858MB\ndask.array&lt;concatenate, shape=(4, 14, 1528, 2508), dtype=float32, chunksize=(2, 1, 1094, 1094), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * x            (x) float64 20kB 4.769e+06 4.769e+06 ... 4.794e+06 4.794e+06\n  * y            (y) float64 12kB 1.397e+06 1.397e+06 ... 1.382e+06 1.382e+06\n  * time         (time) datetime64[ns] 112B 2022-06-25 ... 2022-10-15\n  * sensor       (sensor) object 32B 's1_VH' 's1_VV' 'alos_HV' 'alos_HH'\n    spatial_ref  int64 8B 0xarray.DataArray'gam0'sensor: 4time: 14y: 1528x: 2508dask.array&lt;chunksize=(1, 1, 1094, 1094), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n818.65 MiB\n9.13 MiB\n\n\nShape\n(4, 14, 1528, 2508)\n(2, 1, 1094, 1094)\n\n\nDask graph\n252 chunks in 248 graph layers\n\n\nData type\nfloat32 numpy.ndarray\n\n\n\n\n           4 1                                                          2508 1528 14\n\n\n\n\nCoordinates: (5)x(x)float644.769e+06 4.769e+06 ... 4.794e+06axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([4769375., 4769385., 4769395., ..., 4794425., 4794435., 4794445.])y(y)float641.397e+06 1.397e+06 ... 1.382e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([1397365., 1397355., 1397345., ..., 1382115., 1382105., 1382095.])time(time)datetime64[ns]2022-06-25 ... 2022-10-15array(['2022-06-25T00:00:00.000000000', '2022-06-25T05:27:26.000000000',\n       '2022-07-07T05:27:27.000000000', '2022-07-19T05:27:28.000000000',\n       '2022-07-31T05:27:29.000000000', '2022-08-12T05:27:29.000000000',\n       '2022-08-20T00:00:00.000000000', '2022-09-05T05:27:31.000000000',\n       '2022-09-17T00:00:00.000000000', '2022-09-17T05:27:31.000000000',\n       '2022-09-29T05:27:31.000000000', '2022-10-01T00:00:00.000000000',\n       '2022-10-11T05:27:31.000000000', '2022-10-15T00:00:00.000000000'],\n      dtype='datetime64[ns]')sensor(sensor)object's1_VH' 's1_VV' 'alos_HV' 'alos_HH'array(['s1_VH', 's1_VV', 'alos_HV', 'alos_HH'], dtype=object)spatial_ref()int640crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]GeoTransform :4769370.0 10.0 0.0 1397370.0 0.0 -10.0array(0)Indexes: (4)xPandasIndexPandasIndex(Index([4769375.0, 4769385.0, 4769395.0, 4769405.0, 4769415.0, 4769425.0,\n       4769435.0, 4769445.0, 4769455.0, 4769465.0,\n       ...\n       4794355.0, 4794365.0, 4794375.0, 4794385.0, 4794395.0, 4794405.0,\n       4794415.0, 4794425.0, 4794435.0, 4794445.0],\n      dtype='float64', name='x', length=2508))yPandasIndexPandasIndex(Index([1397365.0, 1397355.0, 1397345.0, 1397335.0, 1397325.0, 1397315.0,\n       1397305.0, 1397295.0, 1397285.0, 1397275.0,\n       ...\n       1382185.0, 1382175.0, 1382165.0, 1382155.0, 1382145.0, 1382135.0,\n       1382125.0, 1382115.0, 1382105.0, 1382095.0],\n      dtype='float64', name='y', length=1528))timePandasIndexPandasIndex(DatetimeIndex(['2022-06-25 00:00:00', '2022-06-25 05:27:26',\n               '2022-07-07 05:27:27', '2022-07-19 05:27:28',\n               '2022-07-31 05:27:29', '2022-08-12 05:27:29',\n               '2022-08-20 00:00:00', '2022-09-05 05:27:31',\n               '2022-09-17 00:00:00', '2022-09-17 05:27:31',\n               '2022-09-29 05:27:31', '2022-10-01 00:00:00',\n               '2022-10-11 05:27:31', '2022-10-15 00:00:00'],\n              dtype='datetime64[ns]', name='time', freq=None))sensorPandasIndexPandasIndex(Index(['s1_VH', 's1_VV', 'alos_HV', 'alos_HH'], dtype='object', name='sensor'))Attributes: (0)\n\n\n\nThe measurements for both satellites don’t occur at the same time. Hence the cube is now padded with 2-D arrays entirely filled with NaN (Not A Number) for some time slices. As we have learned in notebook 2 we can use the resample method to make temporally coherent timeslices for each month. To deal with the dB scale backscatter values as well as the low number of observations per month we use a median of the samples. As taking the median only sorts the samples according to the sample quantiles we do not have to convert the observations to the linear scale.\n\nfused_da = fused_da.\\\n    resample(time=\"ME\", skipna=True).median().compute()\n\nWe can plot each of the variables: “ALOS-2” and “Sentinel-1” to check our results.\n\nfused_da.\\\n    hvplot.image(robust=True, data_aspect=1, cmap=\"Greys_r\", rasterize=True).\\\n    opts(frame_height=600, aspect=\"equal\")\n\n/home/mschobbe/Documents/teaching/notebooks/microwave-remote-sensing/.conda_envs/mrs-env/lib/python3.11/site-packages/numba/np/ufunc/parallel.py:371: NumbaWarning: The TBB threading layer requires TBB version 2021 update 6 or later i.e., TBB_INTERFACE_VERSION &gt;= 12060. Found TBB_INTERFACE_VERSION = 12050. The TBB threading layer is disabled.\n  warnings.warn(problem)\n\n\n\n\n\n\n  \n\n\n\n\nFigure 3: Stacked array with ALOS-2 L-band and Sentinel-1 C-band \\(\\gamma^0_T (dB)\\).\n\nfused_da.to_zarr(\"fused_da.zarr\", mode=\"w\")\n\n&lt;xarray.backends.zarr.ZarrStore at 0x7f040ef3ea40&gt;",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datacubes</span>"
    ]
  },
  {
    "objectID": "unit_02/05_in_class_exercise.html",
    "href": "unit_02/05_in_class_exercise.html",
    "title": "5  In-class Exercise 5: SAR Wavelength and Polarization",
    "section": "",
    "text": "5.1 Data Loading\nThis is the same dataset as we created in the previous notebooks of exercise 4. If you did not manage to finish exercise 4 then you can find the dataset on this location ~/shared/datasets/rs/alos/ex5/fused_ds.zarr.\nfused_ds = xr.open_dataset(\n    \"fused_ds.zarr\", engine=\"zarr\", decode_coords=\"all\", chunks={}\n)\nThe loaded data contains the Leaf Area Index (LAI), which is used as an estimate of foliage cover of forest canopies. So high LAI is interpreted as forested area, whereas low values account for less vegetated areas (shrubs, grass-land, and crops).\nFirst we’ll have a look at the mean and standard deviation of LAI over all timeslices. This can be achieved by using the mean and std methods of the xarray object and by supplying a dimension over which these aggregating operations will be applied. We use the dimension “time”, thereby flattening the cube to a 2-D array with dimensions x and y.\nfig, ax = plt.subplots(1, 2, figsize=(15, 6))\n\nLAI_dc = fused_ds.LAI\nLAI_mean = LAI_dc.mean(\"time\")\nLAI_std = LAI_dc.std(\"time\")\n\nLAI_mean.plot(ax=ax[0], vmin=0, vmax=6).axes.set_aspect(\"equal\")\nLAI_std.plot(ax=ax[1], vmin=0, vmax=3).axes.set_aspect(\"equal\")\nplt.tight_layout()\n\n/home/mschobbe/Documents/teaching/notebooks/microwave-remote-sensing/.conda_envs/mrs-env/lib/python3.11/site-packages/dask/array/numpy_compat.py:57: RuntimeWarning: invalid value encountered in divide\n  x = np.divide(x1, x2, out)\nFigure 1: Map of mean LAI (left) and the associated standard deviation (right) for each pixel over time around Lake Garda.\nIt appears that the northern parts of our study area contain more and variable amounts of green elements per unit area. This might indicate a more complete coverage of foliage and thus forest.",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Wavelength and Polarization</span>"
    ]
  },
  {
    "objectID": "unit_02/05_in_class_exercise.html#timeseries",
    "href": "unit_02/05_in_class_exercise.html#timeseries",
    "title": "5  In-class Exercise 5: SAR Wavelength and Polarization",
    "section": "5.2 Timeseries",
    "text": "5.2 Timeseries\nNow that we have detected possible forested areas, let’s delve a bit deeper into the data. Remember that we deal with a spatiotemporal datacube. This gives us the possibility to study changes for each time increment. Hence we can show what happens to LAI for areas marked with generally low values as well as high values. We can achieve this by filtering the datacube with the where method for areas marked with low and high mean LAI values. In turn we will aggregate the remaining datacube over the spatial dimensions (“x” and “y”) to get a mean values for each time increment.\n\nfig, ax = plt.subplots(1, 2, figsize=(15, 4))\n\nLAI_low = LAI_dc.where(LAI_mean &lt; 4)\nLAI_high = LAI_dc.where(LAI_mean &gt; 4)\n\nLAI_low.mean([\"x\", \"y\"]).plot.scatter(x=\"time\", ax=ax[0], ylim=(0, 6))\nLAI_high.mean([\"x\", \"y\"]).plot.scatter(x=\"time\", ax=ax[1], ylim=(0, 6))\nax[0].set_title(\"Low Mean LAI ($\\\\bar{LAI} &lt; 4$)\")\nax[1].set_title(\"High Mean LAI ($\\\\bar{LAI} &gt; 4$)\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\nFigure 2: Timeseries of mean LAI per timeslice for areas with low (left) and high (right) mean LAI of Figure1.\nNow we can see that areas with high mean LAI values (Figure 1) show a drop-off to values as low as those for areas with low mean LAI during the autumn months (Figure 2 ; right panel). Hence we might deduce that we deal with deciduous forest that becomes less green during autumn, as can be expected for the study area.\nRemember that longer wavelengths like L-bands are more likely to penetrate through a forest canopy and would interact more readily with larger object like tree trunks and the forest floor. In turn, C-band microwaves are more likely to interact with sparse and shrub vegetation. The polarization of the emitted and received microwaves is on the other hand dependent on the type of backscattering with co-polarization (HH and VV) happening more frequently with direct backscatter or double bounce scattering. Whereas volume scattering occurs when the radar signal is subject to multiple reflections within 3-dimensional matter, as the orientation of the main scatterers is random, the polarisation of the backscattered signal is also random. Volume scattering can therefore cause an increase of cross-polarized intensity.\nLet’s put this to the test by checking the microwave backscatter signatures over forested and sparsely vegetated areas as well as water bodies (Lake Garda). Let’s first look at the different sensor readings for the beginning of summer and autumn.\n\nhv.output(widget_location=\"bottom\")\n\nt1 = fused_ds.gam0.\\\n    isel(time=2).\\\n    hvplot.image(robust=True, data_aspect=1, cmap=\"Greys_r\",\n                 rasterize=True, clim=(-25, 0)).\\\n    opts(frame_height=400, aspect=\"equal\")\n\nt2 = fused_ds.gam0.\\\n    isel(time=-1).\\\n    hvplot.image(robust=True, data_aspect=1, cmap=\"Greys_r\",\n                 rasterize=True, clim=(-25, 0)).\\\n    opts(frame_height=400, aspect=\"equal\")\n\nt1 + t2\n\n\n\n\n\n  \n\n\n\n\nFigure 3: Maps of Sentinel-1 and ALOS-2 \\(\\gamma^0_T \\,[dB]\\) for the beginning of summer (left) and autumn (right).\nThe most notable difference is the lower energy received for cross-polarized than for co-polarized microwaves for both Sentinel-1 and ALOS-2. The latter differences are independent of the time of year. However, one can also note small changes in the received energy for the same satellite dependent on the time of year. To get a better feel for these changes over time we generate the following interactive plot. On the following plot one can select areas of a certain mean LAI (by clicking on the map) and see the associated timeseries of \\(\\gamma^0_T\\) for each of the sensors.\n\nLAI_image = LAI_mean.hvplot.\\\n    image(rasterize=True, cmap=\"viridis\", clim=(0, 6)).\\\n    opts(title=\"Mean LAI (Selectable)\", frame_height=400, aspect=\"equal\")\n\n\ndef get_timeseries(x, y):\n    \"\"\"\n    Callback Function Holoviews\n\n    Parameters\n    ----------\n    x: float\n        numeric value for x selected on LAI map\n    y: float\n        numeric value for y selected on LAI map\n    \"\"\"\n\n    lai_value = LAI_mean.sel(x=x, y=y, method=\"nearest\").values\n\n    if np.isnan(lai_value):\n        select = fused_ds.where(LAI_mean.isnull())\n        label = \"Water\"\n    else:\n        mask = np.isclose(LAI_mean, lai_value, atol=0.05)\n        select = fused_ds.where(mask)\n        label = \"Mean LAI: \" + str(np.round(lai_value, 1))\n\n    time_series = (\n        select.gam0.to_dataset(\"sensor\")\n        .median([\"x\", \"y\"], skipna=True)\n        .hvplot.scatter(ylim=(-30, 5))\n        .opts(title=label, frame_height=400)\n    )\n\n    return time_series\n\n\npoint_stream = hv.streams.SingleTap(source=LAI_image)\ntime_series = hv.DynamicMap(get_timeseries, streams=[point_stream])\nLAI_image + time_series\n\nWARNING:param.RasterPlot01204: Due to internal constraints, when aspect and width/height is set, the bokeh backend uses those values as frame_width/frame_height instead. This ensures the aspect is respected, but means that the plot might be slightly larger than anticipated. Set the frame_width/frame_height explicitly to suppress this warning.\n\n\n\n\n\n\n  \n\n\n\n\nFigure 4: Map of MEAN LAI around Lake Garda. The pixel values can be seen by hovering your mouse over the pixels. Clicking on the pixel will generate the timeseries for the associated mean LAI on the right hand-side. (Right) Timeseries of for Sentinel-1 and ALOS-2 \\(\\gamma^0_T [dB]\\).\nCan you see some patterns when analysing the different wavelengths and polarizations?\nRemember again that we deal with a logarithmic scale. A measurement of 10 dB is 10 times brighter than the intensity measured at 0 dB, and 100 times brighter at 20 dB. The most notable difference is that the offset between cross- and co-polarised signals becomes larger at low LAI and lower at higher LAI. This might indicate the effect of volume scattering in forested areas where co- and cross-polarisation render backscattering values more equal. You will study the differences among cross- and co-polarized backscattering in more detail in the homework exercise.",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Wavelength and Polarization</span>"
    ]
  },
  {
    "objectID": "unit_02/06_in_class_exercise.html",
    "href": "unit_02/06_in_class_exercise.html",
    "title": "6  In-class Exercise 6: Dielectric Properties of Natural Media",
    "section": "",
    "text": "6.1 Load Sentinel-1 Data\nFor our analysis we are using sigma naught backscatering data from Sentinel-1. The images we are analyzing cover the region south of Vienna and west of Neusiedlersee Lake. We load the data and and apply again a preprocessing function. Here we extract the scaling factor and the date the image was taken from the metadata. We will focus our attention to a smaller area containing a part of the Neusiedlersee Lake and its surrounding land. The obtainedxarray dataset and is then converted to an array, because we only have one variable, the VV backscatter values.\ndata_path = Path(\"~/shared/datasets/rs/sentinel-1/neusiedler\").expanduser()\n\n\ndef _preprocess(x, bbox):\n    \"\"\"\n    Preprocess file.\n\n    Parameters\n    ----------\n    x : xarray.Dataset\n    xlims: tuple\n    ylims: tuple\n\n    Returns\n    -------\n    xarray.Dataset\n    \"\"\"\n    file = x.encoding[\"source\"]\n\n    with rasterio.open(file) as src:\n        scale_factor = pd.to_numeric(src.tags().get(\"scale_factor\"))\n        time_value = pd.to_datetime(src.tags().get(\"time_begin\"))\n\n        x = x / scale_factor\n        x = x.assign_coords(time=time_value).expand_dims(\"time\")\n\n    x = x.rio.clip_box(*bbox, crs=\"EPSG:4326\")\n\n    return x.rename({\"band_data\": \"sig0\"}).squeeze(\"band\").drop_vars(\"band\")\n\n\nbbox = box(16.6, 47.7, 16.75, 47.8)\npartial_func = partial(_preprocess, bbox=bbox.bounds)\n\nsig0_ds = xr.open_mfdataset(\n    data_path.glob(\"*.tif\"),\n    engine=\"rasterio\",\n    combine=\"nested\",\n    concat_dim=\"time\",\n    preprocess=partial_func,\n).sortby(\"time\")\n\nsig0_da = sig0_ds.sig0\nsig0_da\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'sig0' (time: 8, y: 1221, x: 1230)&gt; Size: 96MB\ndask.array&lt;getitem, shape=(8, 1221, 1230), dtype=float64, chunksize=(1, 1, 1230), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * x            (x) float64 10kB 5.282e+06 5.282e+06 ... 5.294e+06 5.294e+06\n  * y            (y) float64 10kB 1.571e+06 1.571e+06 ... 1.559e+06 1.559e+06\n  * time         (time) datetime64[ns] 64B 2023-08-05T16:51:22 ... 2023-10-28...\n    spatial_ref  int64 8B 0xarray.DataArray'sig0'time: 8y: 1221x: 1230dask.array&lt;chunksize=(1, 1, 1230), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n91.66 MiB\n9.61 kiB\n\n\nShape\n(8, 1221, 1230)\n(1, 1, 1230)\n\n\nDask graph\n9768 chunks in 50 graph layers\n\n\nData type\nfloat64 numpy.ndarray\n\n\n\n\n                                                                           1230 1221 8\n\n\n\n\nCoordinates: (4)x(x)float645.282e+06 5.282e+06 ... 5.294e+06axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([5281995., 5282005., 5282015., ..., 5294265., 5294275., 5294285.])y(y)float641.571e+06 1.571e+06 ... 1.559e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([1570955., 1570945., 1570935., ..., 1558775., 1558765., 1558755.])time(time)datetime64[ns]2023-08-05T16:51:22 ... 2023-10-...array(['2023-08-05T16:51:22.000000000', '2023-08-17T16:51:22.000000000',\n       '2023-08-29T16:51:23.000000000', '2023-09-10T16:51:24.000000000',\n       '2023-09-22T16:51:24.000000000', '2023-10-04T16:51:24.000000000',\n       '2023-10-16T16:51:24.000000000', '2023-10-28T16:51:24.000000000'],\n      dtype='datetime64[ns]')spatial_ref()int640crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]GeoTransform :5281990.0 10.0 0.0 1570960.0 0.0 -10.0array(0)Indexes: (3)xPandasIndexPandasIndex(Index([5281995.0, 5282005.0, 5282015.0, 5282025.0, 5282035.0, 5282045.0,\n       5282055.0, 5282065.0, 5282075.0, 5282085.0,\n       ...\n       5294195.0, 5294205.0, 5294215.0, 5294225.0, 5294235.0, 5294245.0,\n       5294255.0, 5294265.0, 5294275.0, 5294285.0],\n      dtype='float64', name='x', length=1230))yPandasIndexPandasIndex(Index([1570955.0, 1570945.0, 1570935.0, 1570925.0, 1570915.0, 1570905.0,\n       1570895.0, 1570885.0, 1570875.0, 1570865.0,\n       ...\n       1558845.0, 1558835.0, 1558825.0, 1558815.0, 1558805.0, 1558795.0,\n       1558785.0, 1558775.0, 1558765.0, 1558755.0],\n      dtype='float64', name='y', length=1221))timePandasIndexPandasIndex(DatetimeIndex(['2023-08-05 16:51:22', '2023-08-17 16:51:22',\n               '2023-08-29 16:51:23', '2023-09-10 16:51:24',\n               '2023-09-22 16:51:24', '2023-10-04 16:51:24',\n               '2023-10-16 16:51:24', '2023-10-28 16:51:24'],\n              dtype='datetime64[ns]', name='time', freq=None))Attributes: (0)\nLet’s have a look at the data by plotting the first timeslice.\nsig0_da.isel(time=0).plot(robust=True, cmap=\"Greys_r\").axes.set_aspect(\"equal\")",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Backscatter Variability</span>"
    ]
  },
  {
    "objectID": "unit_02/06_in_class_exercise.html#load-corine-landcover-data",
    "href": "unit_02/06_in_class_exercise.html#load-corine-landcover-data",
    "title": "6  In-class Exercise 6: Dielectric Properties of Natural Media",
    "section": "6.2 Load CORINE Landcover Data",
    "text": "6.2 Load CORINE Landcover Data\nWe will load the CORINE Land Cover, which is a pan-European land cover and land use inventory with 44 thematic classes. The resolution of this classification is 100 by 100m and the file was created in 2018 (CORINE Land Cover).\nRemember previous notebooks when comparing variables. Lets have a look at some of the metadata of our dataset.\n\ncorine_path = Path(\"~/shared/datasets/rs/corine\").expanduser()\n\n\ndef print_raster(raster, name):\n    \"\"\"\n    Print Raster Metadata\n\n    Parameters\n    ----------\n    raster: xarray.DataArray|xarray.DataSet\n        raster to process\n    y: string\n        name of product\n    \"\"\"\n\n    print(\n        f\"{name} Raster: \\n----------------\\n\"\n        f\"resolution: {raster.rio.resolution()} {raster.rio.crs.units_factor}\\n\"  # noqa\n        f\"bounds: {raster.rio.bounds()}\\n\"\n        f\"CRS: {raster.rio.crs}\\n\"\n    )\n\n\nbbox = affinity.scale(bbox, xfact=1.2, yfact=1.2)\n\ncor_da = (\n    xr.open_mfdataset(corine_path.glob(\"*.tif\"), engine=\"rasterio\")\n    .rename({\"band_data\": \"land_cover\"})[\"land_cover\"]\n    .squeeze()\n    .rio.clip_box(*bbox.bounds, crs=\"EPSG:4326\")\n)\n\ncor_da\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'land_cover' (y: 146, x: 147)&gt; Size: 86kB\ndask.array&lt;getitem, shape=(146, 147), dtype=float32, chunksize=(81, 116), chunktype=numpy.ndarray&gt;\nCoordinates:\n    band         int64 8B 1\n  * x            (x) float64 1kB 4.814e+06 4.814e+06 ... 4.828e+06 4.828e+06\n  * y            (y) float64 1kB 2.767e+06 2.767e+06 ... 2.753e+06 2.753e+06\n    spatial_ref  int64 8B 0\nAttributes:\n    DataType:                Thematic\n    AREA_OR_POINT:           Area\n    RepresentationType:      THEMATIC\n    STATISTICS_COVARIANCES:  136.429646247598\n    STATISTICS_MAXIMUM:      48\n    STATISTICS_MEAN:         25.753373398066\n    STATISTICS_MINIMUM:      1\n    STATISTICS_SKIPFACTORX:  1\n    STATISTICS_SKIPFACTORY:  1\n    STATISTICS_STDDEV:       11.680310194836xarray.DataArray'land_cover'y: 146x: 147dask.array&lt;chunksize=(65, 31), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n83.84 kiB\n36.70 kiB\n\n\nShape\n(146, 147)\n(81, 116)\n\n\nDask graph\n4 chunks in 4 graph layers\n\n\nData type\nfloat32 numpy.ndarray\n\n\n\n\n           147 146\n\n\n\n\nCoordinates: (4)band()int641array(1)x(x)float644.814e+06 4.814e+06 ... 4.828e+06axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([4813750., 4813850., 4813950., 4814050., 4814150., 4814250., 4814350.,\n       4814450., 4814550., 4814650., 4814750., 4814850., 4814950., 4815050.,\n       4815150., 4815250., 4815350., 4815450., 4815550., 4815650., 4815750.,\n       4815850., 4815950., 4816050., 4816150., 4816250., 4816350., 4816450.,\n       4816550., 4816650., 4816750., 4816850., 4816950., 4817050., 4817150.,\n       4817250., 4817350., 4817450., 4817550., 4817650., 4817750., 4817850.,\n       4817950., 4818050., 4818150., 4818250., 4818350., 4818450., 4818550.,\n       4818650., 4818750., 4818850., 4818950., 4819050., 4819150., 4819250.,\n       4819350., 4819450., 4819550., 4819650., 4819750., 4819850., 4819950.,\n       4820050., 4820150., 4820250., 4820350., 4820450., 4820550., 4820650.,\n       4820750., 4820850., 4820950., 4821050., 4821150., 4821250., 4821350.,\n       4821450., 4821550., 4821650., 4821750., 4821850., 4821950., 4822050.,\n       4822150., 4822250., 4822350., 4822450., 4822550., 4822650., 4822750.,\n       4822850., 4822950., 4823050., 4823150., 4823250., 4823350., 4823450.,\n       4823550., 4823650., 4823750., 4823850., 4823950., 4824050., 4824150.,\n       4824250., 4824350., 4824450., 4824550., 4824650., 4824750., 4824850.,\n       4824950., 4825050., 4825150., 4825250., 4825350., 4825450., 4825550.,\n       4825650., 4825750., 4825850., 4825950., 4826050., 4826150., 4826250.,\n       4826350., 4826450., 4826550., 4826650., 4826750., 4826850., 4826950.,\n       4827050., 4827150., 4827250., 4827350., 4827450., 4827550., 4827650.,\n       4827750., 4827850., 4827950., 4828050., 4828150., 4828250., 4828350.])y(y)float642.767e+06 2.767e+06 ... 2.753e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([2767250., 2767150., 2767050., 2766950., 2766850., 2766750., 2766650.,\n       2766550., 2766450., 2766350., 2766250., 2766150., 2766050., 2765950.,\n       2765850., 2765750., 2765650., 2765550., 2765450., 2765350., 2765250.,\n       2765150., 2765050., 2764950., 2764850., 2764750., 2764650., 2764550.,\n       2764450., 2764350., 2764250., 2764150., 2764050., 2763950., 2763850.,\n       2763750., 2763650., 2763550., 2763450., 2763350., 2763250., 2763150.,\n       2763050., 2762950., 2762850., 2762750., 2762650., 2762550., 2762450.,\n       2762350., 2762250., 2762150., 2762050., 2761950., 2761850., 2761750.,\n       2761650., 2761550., 2761450., 2761350., 2761250., 2761150., 2761050.,\n       2760950., 2760850., 2760750., 2760650., 2760550., 2760450., 2760350.,\n       2760250., 2760150., 2760050., 2759950., 2759850., 2759750., 2759650.,\n       2759550., 2759450., 2759350., 2759250., 2759150., 2759050., 2758950.,\n       2758850., 2758750., 2758650., 2758550., 2758450., 2758350., 2758250.,\n       2758150., 2758050., 2757950., 2757850., 2757750., 2757650., 2757550.,\n       2757450., 2757350., 2757250., 2757150., 2757050., 2756950., 2756850.,\n       2756750., 2756650., 2756550., 2756450., 2756350., 2756250., 2756150.,\n       2756050., 2755950., 2755850., 2755750., 2755650., 2755550., 2755450.,\n       2755350., 2755250., 2755150., 2755050., 2754950., 2754850., 2754750.,\n       2754650., 2754550., 2754450., 2754350., 2754250., 2754150., 2754050.,\n       2753950., 2753850., 2753750., 2753650., 2753550., 2753450., 2753350.,\n       2753250., 2753150., 2753050., 2752950., 2752850., 2752750.])spatial_ref()int640crs_wkt :PROJCS[\"ETRS89-extended / LAEA Europe\",GEOGCS[\"ETRS89\",DATUM[\"European_Terrestrial_Reference_System_1989\",SPHEROID[\"GRS 1980\",6378137,298.257222101004,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6258\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4258\"]],PROJECTION[\"Lambert_Azimuthal_Equal_Area\"],PARAMETER[\"latitude_of_center\",52],PARAMETER[\"longitude_of_center\",10],PARAMETER[\"false_easting\",4321000],PARAMETER[\"false_northing\",3210000],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"3035\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314140356inverse_flattening :298.257222101004reference_ellipsoid_name :GRS 1980longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :ETRS89horizontal_datum_name :European Terrestrial Reference System 1989projected_crs_name :ETRS89-extended / LAEA Europegrid_mapping_name :lambert_azimuthal_equal_arealatitude_of_projection_origin :52.0longitude_of_projection_origin :10.0false_easting :4321000.0false_northing :3210000.0spatial_ref :PROJCS[\"ETRS89-extended / LAEA Europe\",GEOGCS[\"ETRS89\",DATUM[\"European_Terrestrial_Reference_System_1989\",SPHEROID[\"GRS 1980\",6378137,298.257222101004,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6258\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4258\"]],PROJECTION[\"Lambert_Azimuthal_Equal_Area\"],PARAMETER[\"latitude_of_center\",52],PARAMETER[\"longitude_of_center\",10],PARAMETER[\"false_easting\",4321000],PARAMETER[\"false_northing\",3210000],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"3035\"]]GeoTransform :4813700.0 100.0 0.0 2767300.0 0.0 -100.0array(0)Indexes: (2)xPandasIndexPandasIndex(Index([4813750.0, 4813850.0, 4813950.0, 4814050.0, 4814150.0, 4814250.0,\n       4814350.0, 4814450.0, 4814550.0, 4814650.0,\n       ...\n       4827450.0, 4827550.0, 4827650.0, 4827750.0, 4827850.0, 4827950.0,\n       4828050.0, 4828150.0, 4828250.0, 4828350.0],\n      dtype='float64', name='x', length=147))yPandasIndexPandasIndex(Index([2767250.0, 2767150.0, 2767050.0, 2766950.0, 2766850.0, 2766750.0,\n       2766650.0, 2766550.0, 2766450.0, 2766350.0,\n       ...\n       2753650.0, 2753550.0, 2753450.0, 2753350.0, 2753250.0, 2753150.0,\n       2753050.0, 2752950.0, 2752850.0, 2752750.0],\n      dtype='float64', name='y', length=146))Attributes: (10)DataType :ThematicAREA_OR_POINT :AreaRepresentationType :THEMATICSTATISTICS_COVARIANCES :136.429646247598STATISTICS_MAXIMUM :48STATISTICS_MEAN :25.753373398066STATISTICS_MINIMUM :1STATISTICS_SKIPFACTORX :1STATISTICS_SKIPFACTORY :1STATISTICS_STDDEV :11.680310194836\n\n\n\n\nprint_raster(sig0_da, \"Sentinel-1\")\n\nSentinel-1 Raster: \n----------------\nresolution: (10.0, -10.0) ('metre', 1.0)\nbounds: (5281990.0, 1558750.0, 5294290.0, 1570960.0)\nCRS: EPSG:27704\n\n\n\n\nprint_raster(cor_da, \"Corine Land Cover\")\n\nCorine Land Cover Raster: \n----------------\nresolution: (100.0, -100.0) ('metre', 1.0)\nbounds: (4813700.0, 2752700.0, 4828400.0, 2767300.0)\nCRS: PROJCS[\"ETRS89-extended / LAEA Europe\",GEOGCS[\"ETRS89\",DATUM[\"European_Terrestrial_Reference_System_1989\",SPHEROID[\"GRS 1980\",6378137,298.257222101004,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6258\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4258\"]],PROJECTION[\"Lambert_Azimuthal_Equal_Area\"],PARAMETER[\"latitude_of_center\",52],PARAMETER[\"longitude_of_center\",10],PARAMETER[\"false_easting\",4321000],PARAMETER[\"false_northing\",3210000],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"3035\"]]\n\n\n\nThe long name for CRS corresponds to the grid (EPSG:3035). We will again use rioxarray to reproject_match to convert the CORINE Land Cover map in the desired projection and resolution. The CORINE Land Cover is originally given as integer values. Hence we use the default nearest neighbour method for resampling.\n\ncor_da = cor_da.rio.reproject_match(sig0_da)\ncor_da = cor_da.assign_coords({\"x\": sig0_da.x, \"y\": sig0_da.y})\ncor_da\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'land_cover' (y: 1221, x: 1230)&gt; Size: 6MB\narray([[12., 12., 12., ..., 41., 41., 41.],\n       [12., 12., 12., ..., 41., 41., 41.],\n       [12., 12., 12., ..., 41., 41., 41.],\n       ...,\n       [ 2.,  2.,  2., ..., 41., 41., 41.],\n       [ 2.,  2.,  2., ..., 41., 41., 41.],\n       [ 2.,  2.,  2., ..., 41., 41., 41.]], dtype=float32)\nCoordinates:\n    band         int64 8B 1\n    spatial_ref  int64 8B 0\n  * x            (x) float64 10kB 5.282e+06 5.282e+06 ... 5.294e+06 5.294e+06\n  * y            (y) float64 10kB 1.571e+06 1.571e+06 ... 1.559e+06 1.559e+06\nAttributes:\n    DataType:                Thematic\n    AREA_OR_POINT:           Area\n    RepresentationType:      THEMATIC\n    STATISTICS_COVARIANCES:  136.429646247598\n    STATISTICS_MAXIMUM:      48\n    STATISTICS_MEAN:         25.753373398066\n    STATISTICS_MINIMUM:      1\n    STATISTICS_SKIPFACTORX:  1\n    STATISTICS_SKIPFACTORY:  1\n    STATISTICS_STDDEV:       11.680310194836xarray.DataArray'land_cover'y: 1221x: 123012.0 12.0 12.0 12.0 12.0 12.0 12.0 ... 41.0 41.0 41.0 41.0 41.0 41.0array([[12., 12., 12., ..., 41., 41., 41.],\n       [12., 12., 12., ..., 41., 41., 41.],\n       [12., 12., 12., ..., 41., 41., 41.],\n       ...,\n       [ 2.,  2.,  2., ..., 41., 41., 41.],\n       [ 2.,  2.,  2., ..., 41., 41., 41.],\n       [ 2.,  2.,  2., ..., 41., 41., 41.]], dtype=float32)Coordinates: (4)band()int641array(1)spatial_ref()int640crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]GeoTransform :5281990.0 10.0 0.0 1570960.0 0.0 -10.0array(0)x(x)float645.282e+06 5.282e+06 ... 5.294e+06axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([5281995., 5282005., 5282015., ..., 5294265., 5294275., 5294285.])y(y)float641.571e+06 1.571e+06 ... 1.559e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([1570955., 1570945., 1570935., ..., 1558775., 1558765., 1558755.])Indexes: (2)xPandasIndexPandasIndex(Index([5281995.0, 5282005.0, 5282015.0, 5282025.0, 5282035.0, 5282045.0,\n       5282055.0, 5282065.0, 5282075.0, 5282085.0,\n       ...\n       5294195.0, 5294205.0, 5294215.0, 5294225.0, 5294235.0, 5294245.0,\n       5294255.0, 5294265.0, 5294275.0, 5294285.0],\n      dtype='float64', name='x', length=1230))yPandasIndexPandasIndex(Index([1570955.0, 1570945.0, 1570935.0, 1570925.0, 1570915.0, 1570905.0,\n       1570895.0, 1570885.0, 1570875.0, 1570865.0,\n       ...\n       1558845.0, 1558835.0, 1558825.0, 1558815.0, 1558805.0, 1558795.0,\n       1558785.0, 1558775.0, 1558765.0, 1558755.0],\n      dtype='float64', name='y', length=1221))Attributes: (10)DataType :ThematicAREA_OR_POINT :AreaRepresentationType :THEMATICSTATISTICS_COVARIANCES :136.429646247598STATISTICS_MAXIMUM :48STATISTICS_MEAN :25.753373398066STATISTICS_MINIMUM :1STATISTICS_SKIPFACTORX :1STATISTICS_SKIPFACTORY :1STATISTICS_STDDEV :11.680310194836\n\n\n\n6.2.1 Colormapping and Encoding\nFor the different land cover types we use the official color encoding which can be found in CORINE Land Cover. The color mapping is stored in a json file under assets.\n\n# Load encoding\nwith open(\"../assets/06_color_mapping.json\", \"r\") as f:\n    color_mapping_data = json.load(f)\n\n# Get mapping\ncolor_mapping = {item[\"value\"]: item for item in\n                 color_mapping_data[\"land_cover\"]}\n\n# Create cmap and norm for plotting\ncolors = [info[\"color\"] for info in color_mapping.values()]\ncategories = [info[\"value\"] for info in color_mapping.values()]\ncmap = ListedColormap(colors)\nnorm = BoundaryNorm(categories + [max(categories) + 1], len(categories))\n\nNow we can plot the CORINE Land Cover dataset.\n\n# Get landcover codes present in the image\npresent_landcover_codes = np.unique(cor_da.values[~np.isnan(cor_da.values)].\n                                    astype(int))\n\n# Get colors + text for legend\nhandles = [\n    mpatches.Patch(\n        color=info[\"color\"], label=(f'{info[\"value\"]} - ' + (info[\"label\"]))\n        )\n    for info in color_mapping.values()\n    if info[\"value\"] in present_landcover_codes\n]\n\n# Create the plot\ncor_da.plot(figsize=(10, 10), cmap=cmap, norm=norm, add_colorbar=False).\\\n    axes.set_aspect(\"equal\")\n\nplt.legend(\n    handles=handles,\n    bbox_to_anchor=(1.01, 1),\n    loc=\"upper left\",\n    borderaxespad=0,\n    fontsize=7,\n)\nplt.title(\"CORINE Land Cover (EPSG:27704)\")\n\nText(0.5, 1.0, 'CORINE Land Cover (EPSG:27704)')\n\n\n\n\n\n\n\n\n\nNow we are ready to merge the backscatter data (sig0_da) with the land cover dataset (cor_da) to have one dataset combining all data.\n\nvar_ds = xr.merge([sig0_da, cor_da]).drop_vars(\"band\").compute()\nvar_ds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 102MB\nDimensions:      (x: 1230, y: 1221, time: 8)\nCoordinates:\n  * x            (x) float64 10kB 5.282e+06 5.282e+06 ... 5.294e+06 5.294e+06\n  * y            (y) float64 10kB 1.571e+06 1.571e+06 ... 1.559e+06 1.559e+06\n  * time         (time) datetime64[ns] 64B 2023-08-05T16:51:22 ... 2023-10-28...\n    spatial_ref  int64 8B 0\nData variables:\n    sig0         (time, y, x) float64 96MB -6.99 -7.32 -8.78 ... -14.32 -14.22\n    land_cover   (y, x) float32 6MB 12.0 12.0 12.0 12.0 ... 41.0 41.0 41.0 41.0xarray.DatasetDimensions:x: 1230y: 1221time: 8Coordinates: (4)x(x)float645.282e+06 5.282e+06 ... 5.294e+06axis :Xlong_name :x coordinate of projectionstandard_name :projection_x_coordinateunits :metrearray([5281995., 5282005., 5282015., ..., 5294265., 5294275., 5294285.])y(y)float641.571e+06 1.571e+06 ... 1.559e+06axis :Ylong_name :y coordinate of projectionstandard_name :projection_y_coordinateunits :metrearray([1570955., 1570945., 1570935., ..., 1558775., 1558765., 1558755.])time(time)datetime64[ns]2023-08-05T16:51:22 ... 2023-10-...array(['2023-08-05T16:51:22.000000000', '2023-08-17T16:51:22.000000000',\n       '2023-08-29T16:51:23.000000000', '2023-09-10T16:51:24.000000000',\n       '2023-09-22T16:51:24.000000000', '2023-10-04T16:51:24.000000000',\n       '2023-10-16T16:51:24.000000000', '2023-10-28T16:51:24.000000000'],\n      dtype='datetime64[ns]')spatial_ref()int640crs_wkt :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :Azimuthal_Equidistantgrid_mapping_name :azimuthal_equidistantlatitude_of_projection_origin :53.0longitude_of_projection_origin :24.0false_easting :5837287.81977false_northing :2121415.69617spatial_ref :PROJCS[\"Azimuthal_Equidistant\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Azimuthal_Equidistant\"],PARAMETER[\"latitude_of_center\",53],PARAMETER[\"longitude_of_center\",24],PARAMETER[\"false_easting\",5837287.81977],PARAMETER[\"false_northing\",2121415.69617],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]GeoTransform :5281990.0 10.0 0.0 1570960.0 0.0 -10.0array(0)Data variables: (2)sig0(time, y, x)float64-6.99 -7.32 -8.78 ... -14.32 -14.22array([[[ -6.99,  -7.32,  -8.78, ..., -26.06, -21.29, -18.64],\n        [ -6.37,  -8.79,  -8.78, ..., -26.2 , -21.8 , -21.18],\n        [ -6.96,  -8.36,  -9.  , ..., -26.2 , -24.44, -24.31],\n        ...,\n        [ -7.82,  -4.94,  -4.8 , ...,  -8.78,  -8.02,  -7.3 ],\n        [ -7.41,  -9.33,  -8.67, ..., -10.69,  -6.36,  -5.22],\n        [-11.11, -11.8 , -11.55, ..., -14.89,  -6.95,  -3.89]],\n\n       [[ -8.5 , -10.65, -12.07, ..., -22.27, -20.91, -21.92],\n        [ -9.  , -10.03, -10.82, ..., -16.46, -16.9 , -21.84],\n        [ -6.74,  -7.87,  -8.1 , ..., -17.41, -22.64, -23.01],\n        ...,\n        [ -8.74,  -7.44,  -6.69, ..., -10.85,  -8.39,  -7.08],\n        [ -9.39,  -9.55,  -8.9 , ..., -13.  , -11.03,  -9.15],\n        [-10.86, -10.84,  -9.7 , ..., -17.47, -14.58, -10.65]],\n\n       [[-10.39, -11.92, -11.74, ..., -19.02, -20.28, -17.92],\n        [ -8.65, -14.64, -12.34, ..., -21.77, -19.55, -16.67],\n        [ -8.11, -11.29, -10.25, ..., -23.16, -20.23, -16.73],\n        ...,\n...\n        ...,\n        [ -9.82,  -9.11,  -8.73, ...,  -9.79,  -7.33,  -6.92],\n        [-12.23, -11.64,  -9.59, ..., -12.29,  -7.65,  -8.14],\n        [-13.6 , -13.41, -11.73, ..., -19.82, -12.53, -11.83]],\n\n       [[-12.49, -12.55, -12.89, ..., -21.35, -23.29, -23.87],\n        [-12.15, -12.38, -14.03, ..., -18.07, -23.53, -23.23],\n        [-12.41, -12.52, -14.08, ..., -18.7 , -21.47, -22.17],\n        ...,\n        [ -6.87,  -5.98,  -5.32, ..., -18.47, -12.26, -11.2 ],\n        [-11.18,  -6.31,  -6.12, ..., -20.17, -12.56, -11.61],\n        [-11.98,  -9.02,  -8.46, ..., -13.06, -10.4 ,  -9.  ]],\n\n       [[ -6.41,  -6.59,  -7.16, ..., -22.25, -25.96, -25.45],\n        [ -6.75,  -9.42,  -9.54, ..., -20.65, -26.34, -23.53],\n        [ -8.24, -12.04, -10.46, ..., -20.65, -20.63, -21.05],\n        ...,\n        [ -6.64,  -5.06,  -4.89, ..., -13.67, -12.26,  -9.96],\n        [ -9.62,  -8.06, -10.02, ..., -16.11, -14.74, -10.64],\n        [-11.93, -11.41, -12.68, ..., -19.01, -14.32, -14.22]]])land_cover(y, x)float3212.0 12.0 12.0 ... 41.0 41.0 41.0DataType :ThematicAREA_OR_POINT :AreaRepresentationType :THEMATICSTATISTICS_COVARIANCES :136.429646247598STATISTICS_MAXIMUM :48STATISTICS_MEAN :25.753373398066STATISTICS_MINIMUM :1STATISTICS_SKIPFACTORX :1STATISTICS_SKIPFACTORY :1STATISTICS_STDDEV :11.680310194836array([[12., 12., 12., ..., 41., 41., 41.],\n       [12., 12., 12., ..., 41., 41., 41.],\n       [12., 12., 12., ..., 41., 41., 41.],\n       ...,\n       [ 2.,  2.,  2., ..., 41., 41., 41.],\n       [ 2.,  2.,  2., ..., 41., 41., 41.],\n       [ 2.,  2.,  2., ..., 41., 41., 41.]], dtype=float32)Indexes: (3)xPandasIndexPandasIndex(Index([5281995.0, 5282005.0, 5282015.0, 5282025.0, 5282035.0, 5282045.0,\n       5282055.0, 5282065.0, 5282075.0, 5282085.0,\n       ...\n       5294195.0, 5294205.0, 5294215.0, 5294225.0, 5294235.0, 5294245.0,\n       5294255.0, 5294265.0, 5294275.0, 5294285.0],\n      dtype='float64', name='x', length=1230))yPandasIndexPandasIndex(Index([1570955.0, 1570945.0, 1570935.0, 1570925.0, 1570915.0, 1570905.0,\n       1570895.0, 1570885.0, 1570875.0, 1570865.0,\n       ...\n       1558845.0, 1558835.0, 1558825.0, 1558815.0, 1558805.0, 1558795.0,\n       1558785.0, 1558775.0, 1558765.0, 1558755.0],\n      dtype='float64', name='y', length=1221))timePandasIndexPandasIndex(DatetimeIndex(['2023-08-05 16:51:22', '2023-08-17 16:51:22',\n               '2023-08-29 16:51:23', '2023-09-10 16:51:24',\n               '2023-09-22 16:51:24', '2023-10-04 16:51:24',\n               '2023-10-16 16:51:24', '2023-10-28 16:51:24'],\n              dtype='datetime64[ns]', name='time', freq=None))Attributes: (0)",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Backscatter Variability</span>"
    ]
  },
  {
    "objectID": "unit_02/06_in_class_exercise.html#backscatter-variability",
    "href": "unit_02/06_in_class_exercise.html#backscatter-variability",
    "title": "6  In-class Exercise 6: Dielectric Properties of Natural Media",
    "section": "6.3 Backscatter Variability",
    "text": "6.3 Backscatter Variability\nWith this combined dataset we can study backscatter variability in relation to natural media. For example we can look at the backscatter variability for water by clipping the dataset to only contain the land cover class water, like so:\n\n# 41 = encoded value for water bodies\nwaterbodies_mask = var_ds.land_cover == 41\nwaterbodies_mask.plot().axes.set_aspect(\"equal\")\n\n\n\n\n\n\n\n\nThis gives use backscatter values over water only.\n\nwaterbodies_sig0 = var_ds.sig0.isel(time=0).where(waterbodies_mask)\nwaterbodies_sig0.plot(robust=True, cmap=\"Greys_r\").axes.set_aspect(\"equal\")\n\n\n\n\n\n\n\n\nTo get an idea of the variability we can create a histogram. Radar backscatter from water bodies fluctuates with surface roughness, which changes with wind conditions, creating spatial and temporal variations in signal intensity.\n\nwaterbodies_sig0.plot.hist(bins=50, edgecolor=\"black\")\n\n(array([5.0000e+00, 5.0000e+00, 8.0000e+00, 1.4000e+01, 3.5000e+01,\n        7.8000e+01, 1.5600e+02, 3.0500e+02, 5.4000e+02, 1.0380e+03,\n        1.9550e+03, 3.6850e+03, 6.9910e+03, 1.2269e+04, 1.9088e+04,\n        2.6859e+04, 3.6217e+04, 4.5276e+04, 5.0939e+04, 4.9020e+04,\n        3.9729e+04, 2.5400e+04, 1.2426e+04, 5.4390e+03, 2.6990e+03,\n        2.0500e+03, 2.1330e+03, 2.6890e+03, 3.1490e+03, 3.9510e+03,\n        4.2970e+03, 4.1110e+03, 3.6350e+03, 2.5900e+03, 1.6020e+03,\n        7.5000e+02, 3.5200e+02, 1.2300e+02, 5.6000e+01, 3.7000e+01,\n        2.8000e+01, 2.1000e+01, 1.3000e+01, 9.0000e+00, 1.0000e+01,\n        8.0000e+00, 1.0000e+01, 5.0000e+00, 6.0000e+00, 4.0000e+00]),\n array([-37.91  , -36.9202, -35.9304, -34.9406, -33.9508, -32.961 ,\n        -31.9712, -30.9814, -29.9916, -29.0018, -28.012 , -27.0222,\n        -26.0324, -25.0426, -24.0528, -23.063 , -22.0732, -21.0834,\n        -20.0936, -19.1038, -18.114 , -17.1242, -16.1344, -15.1446,\n        -14.1548, -13.165 , -12.1752, -11.1854, -10.1956,  -9.2058,\n         -8.216 ,  -7.2262,  -6.2364,  -5.2466,  -4.2568,  -3.267 ,\n         -2.2772,  -1.2874,  -0.2976,   0.6922,   1.682 ,   2.6718,\n          3.6616,   4.6514,   5.6412,   6.631 ,   7.6208,   8.6106,\n          9.6004,  10.5902,  11.58  ]),\n &lt;BarContainer object of 50 artists&gt;)",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Backscatter Variability</span>"
    ]
  },
  {
    "objectID": "unit_02/06_in_class_exercise.html#variability-over-time",
    "href": "unit_02/06_in_class_exercise.html#variability-over-time",
    "title": "6  In-class Exercise 6: Dielectric Properties of Natural Media",
    "section": "6.4 Variability over Time",
    "text": "6.4 Variability over Time\nNext we will look at the changes in variability in backscatter values over time for each of the CORINE Land Cover types. We do this by creating the following interactive plot. We can spot that backscatter in agricultural fields varies due to seasonal cycles like planting, growing, and harvesting, each of which changes vegetation structure. Changes in backscatter are strongly related to soil moisture content from irrigation or rainfall. Ultimately, phenological stages of crops and canopy moisture dynamics can affect the backscatter signal.\n\nhv.extension(\"bokeh\")\n\nrobust_min = var_ds.sig0.quantile(0.02).item()\nrobust_max = var_ds.sig0.quantile(0.98).item()\n\nbin_edges = [\n    i + j * 0.5\n    for i in range(int(robust_min) - 2, int(robust_max) + 2)\n    for j in range(2)\n]\n\nland_cover = {\"\\xa0\\xa0\\xa0 Complete Land Cover\": 1}\nland_cover.update(\n    {\n        f\"{int(value): 02} {color_mapping[value]['label']}\": int(value)\n        for value in present_landcover_codes\n    }\n)\ntime = var_ds.sig0[\"time\"].values\n\nrangexy = RangeXY()\n\n\ndef load_image(time, land_cover, x_range, y_range):\n    \"\"\"\n    Callback Function Landcover.\n\n    Parameters\n    ----------\n    time: panda.datatime\n        time slice\n    landcover: int\n        land cover type\n    x_range: array_like\n        longitude range\n    y_range: array_like\n        latitude range\n\n    Returns\n    -------\n    holoviews.Image\n    \"\"\"\n\n    if land_cover == \"\\xa0\\xa0\\xa0 Complete Land Cover\":\n        sig0_selected_ds = var_ds.sig0.sel(time=time)\n\n    else:\n        land_cover_value = int(land_cover.split()[0])\n        mask_ds = var_ds.land_cover == land_cover_value\n        sig0_selected_ds = var_ds.sig0.sel(time=time).where(mask_ds)\n\n    hv_ds = hv.Dataset(sig0_selected_ds)\n    img = hv_ds.to(hv.Image, [\"x\", \"y\"])\n\n    if x_range and y_range:\n        img = img.select(x=x_range, y=y_range)\n\n    return hv.Image(img)\n\n\ndmap = (\n    hv.DynamicMap(load_image, kdims=[\"Time\", \"Landcover\"], streams=[rangexy])\n    .redim.values(Time=time, Landcover=land_cover)\n    .hist(normed=True, bins=bin_edges)\n)\n\nimage_opts = hv.opts.Image(\n    cmap=\"Greys_r\",\n    colorbar=True,\n    tools=[\"hover\"],\n    clim=(robust_min, robust_max),\n    aspect=\"equal\",\n    framewise=False,\n    frame_height=500,\n    frame_width=500,\n)\n\nhist_opts = hv.opts.Histogram(width=350, height=555)\n\ndmap.opts(image_opts, hist_opts)",
    "crumbs": [
      "Unit 2",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Backscatter Variability</span>"
    ]
  }
]